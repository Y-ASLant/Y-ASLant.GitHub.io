import{_ as r,c as p,I as e,j as t,w as l,a,au as n,D as s,o as c}from"./chunks/framework.RMxno62p.js";const q=JSON.parse('{"title":"新建图空间","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/🛠️ 开发/🗂 数据库/图数据库 Graph DB/🌃 NebulaGraph/新建图空间.md","filePath":"笔记/🛠️ 开发/🗂 数据库/图数据库 Graph DB/🌃 NebulaGraph/新建图空间.md"}'),k={name:"笔记/🛠️ 开发/🗂 数据库/图数据库 Graph DB/🌃 NebulaGraph/新建图空间.md"},_=t("h1",{id:"新建图空间",tabindex:"-1"},[a("新建图空间 "),t("a",{class:"header-anchor",href:"#新建图空间","aria-label":'Permalink to "新建图空间"'},"​")],-1),g=n('<h5 id="文档版本" tabindex="-1">文档版本 <a class="header-anchor" href="#文档版本" aria-label="Permalink to &quot;文档版本&quot;">​</a></h5><table tabindex="0"><thead><tr><th>编辑者</th><th>版本</th><th>变更日期</th><th>变更说明</th></tr></thead><tbody><tr><td>Neko</td><td>v1.0.0</td><td>2021-12-01</td><td></td></tr></tbody></table><h3 id="文档兼容性" tabindex="-1">文档兼容性 <a class="header-anchor" href="#文档兼容性" aria-label="Permalink to &quot;文档兼容性&quot;">​</a></h3>',3),y={tabindex:"0"},u=t("thead",null,[t("tr",null,[t("th",null,"主体"),t("th",null,"版本号"),t("th",null,"文档地址（如果有）")])],-1),b=t("td",null,"NebulaGraph",-1),B=t("td",null,"v2.6.1",-1),f=n('<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>空间（Space）类似于 SQL 的数据库</p><h2 id="语法" tabindex="-1">语法<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法[^1]&quot;">​</a></h2><ol><li>中（方）括号表示可选，实际语句中不要出现中（方）括号</li><li>尖括号表示替换，需要把你实际需要填写的值替换到尖括号所在的位置上</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> SPACE </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">[IF NOT EXISTS]</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">graph_space_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ( </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">[partition_num = &lt;partition_number&gt;,]</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> [replica_factor = &lt;replica_number&gt;,]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> vid_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {FIXED_STRING(</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">N</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) | </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">[64]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} ) </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">[COMMENT = &#39;&lt;comment&gt;&#39;]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><h3 id="参数说明" tabindex="-1">参数说明 <a class="header-anchor" href="#参数说明" aria-label="Permalink to &quot;参数说明&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>IF NOT EXISTS</code></td><td style="text-align:left;">检测待创建的图空间是否存在，只有不存在时，才会创建图空间。仅检测图空间的名称，不会检测具体属性。</td></tr><tr><td style="text-align:left;"><code>&lt;graph_space_name&gt;</code></td><td style="text-align:left;">在Nebula Graph实例中唯一标识一个图空间。图空间名称由大小写英文字母、数字或下划线组成，区分大写小，且不可使用关键字和保留字。</td></tr><tr><td style="text-align:left;"><code>partition_num</code></td><td style="text-align:left;">指定图空间的分片数量。建议设置为5倍的集群硬盘数量。例如集群中有3个硬盘，建议设置15个分片。默认值为100。</td></tr><tr><td style="text-align:left;"><code>replica_factor</code></td><td style="text-align:left;">指定每个分片的副本数量。建议在生产环境中设置为3，在测试环境中设置为1。由于需要基于多数表决，副本数量必须是<strong>奇数</strong>。默认值为1。</td></tr><tr><td style="text-align:left;"><code>vid_type</code></td><td style="text-align:left;">必选参数。指定点ID的数据类型。可选值为<code>FIXED_STRING(&lt;N&gt;)</code>和<code>INT64</code>。<code>INT</code>等同于<code>INT64</code>。<code>FIXED_STRING(&lt;N&gt;)</code>表示数据类型为字符串，最大长度为<code>N</code>，超出长度会报错；<code>INT64</code>表示数据类型为整数。</td></tr><tr><td style="text-align:left;"><code>ON &lt;group_name&gt;</code></td><td style="text-align:left;">指定图空间所属的Group。详情请参见 Group &amp; Zone。</td></tr><tr><td style="text-align:left;"><code>COMMENT</code></td><td style="text-align:left;">图空间的描述。最大为256字节。默认无描述。</td></tr></tbody></table><h2 id="创建一个-vid-type-类型为-int64-64-位整型-的空间" tabindex="-1">创建一个 vid_type 类型为 INT64（64 位整型）的空间 <a class="header-anchor" href="#创建一个-vid-type-类型为-int64-64-位整型-的空间" aria-label="Permalink to &quot;创建一个 vid_type 类型为 INT64（64 位整型）的空间&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> SPACE </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> NOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> EXISTS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> space_name(vid_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">INT64);</span></span></code></pre></div><h2 id="创建一个-vid-type-类型为-fixed-string-20-长度为20的固定字符串-的空间" tabindex="-1">创建一个 vid_type 类型为 FIXED_STRING(20)（长度为20的固定字符串）的空间 <a class="header-anchor" href="#创建一个-vid-type-类型为-fixed-string-20-长度为20的固定字符串-的空间" aria-label="Permalink to &quot;创建一个 vid_type 类型为 FIXED_STRING(20)（长度为20的固定字符串）的空间&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> SPACE </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> NOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> EXISTS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> space_name(vid_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">FIXED_STRING(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span></code></pre></div>',11),D=t("hr",{class:"footnotes-sep"},null,-1),E={class:"footnotes"},C={class:"footnotes-list"},A={id:"fn1",class:"footnote-item"},N=t("a",{href:"#fnref1",class:"footnote-backref"},"↩︎",-1);function m(T,x,I,v,S,F){const h=s("NolebasePageProperties"),i=s("VPNolebaseInlineLinkPreview"),d=s("NolebaseGitContributors"),o=s("NolebaseGitChangelog");return c(),p("div",null,[_,e(h),g,t("table",y,[u,t("tbody",null,[t("tr",null,[b,B,t("td",null,[e(i,{href:"https://docs.nebula-graph.com.cn/2.6.1/",target:"_blank",rel:"noreferrer"},{default:l(()=>[a("https://docs.nebula-graph.com.cn/2.6.1/")]),_:1})])])])]),f,e(d),e(o),D,t("section",E,[t("ol",C,[t("li",A,[t("p",null,[e(i,{href:"https://docs.nebula-graph.com.cn/2.6.1/3.ngql-guide/9.space-statements/1.create-space/",target:"_blank",rel:"noreferrer"},{default:l(()=>[a("CREATE SPACE（创建空间） - Nebula Graph Database 手册")]),_:1}),a(),N])])])])])}const G=r(k,[["render",m]]);export{q as __pageData,G as default};
