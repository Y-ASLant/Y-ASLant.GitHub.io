import{_ as r,c as d,I as a,j as s,w as n,a as i,au as t,D as l,o}from"./chunks/framework.RMxno62p.js";const G=JSON.parse('{"title":"使用 Docker 安装和部署 ELK","description":"","frontmatter":{"tags":["命令行/docker","开发/容器化/Docker","开发/云原生/Docker","软件/云原生/docker","开发/云原生/可观测","软件/Elastic","软件/Elastic/ELK","软件/Elastic/ElasticStack","软件/Elastic/ElasticSearch","软件/Elastic/Kibana","软件/Elastic/Logstash","开发/云原生/可观测/日志","开发/云原生/可观测/指标","开发/云原生/可观测/监控","基础设施","命令行/apt","操作系统/Debian","操作系统/Debian/Debian-11","开发/标记语言/YAML","开发/容器化/Docker/Docker-Compose","命令行/sysctl","命令行/curl"]},"headers":[],"relativePath":"笔记/🧱 基础设施/🔍 Elastic Stack (ELK)/安装 ELK.md","filePath":"笔记/🧱 基础设施/🔍 Elastic Stack (ELK)/安装 ELK.md"}'),c={name:"笔记/🧱 基础设施/🔍 Elastic Stack (ELK)/安装 ELK.md"},g=s("h1",{id:"使用-docker-安装和部署-elk",tabindex:"-1"},[i("使用 Docker 安装和部署 ELK "),s("a",{class:"header-anchor",href:"#使用-docker-安装和部署-elk","aria-label":'Permalink to "使用 Docker 安装和部署 ELK"'},"​")],-1),y=s("p",null,[s("strong",null,"ELK 即 ElasticSearch、Logstash、Kibana 栈，用于日志分析、日志搜索。")],-1),C=s("h3",{id:"文档兼容性",tabindex:"-1"},[i("文档兼容性 "),s("a",{class:"header-anchor",href:"#文档兼容性","aria-label":'Permalink to "文档兼容性"'},"​")],-1),u={tabindex:"0"},F=s("thead",null,[s("tr",null,[s("th",null,"主体"),s("th",null,"版本号"),s("th",null,"文档地址（如果有）")])],-1),b=s("td",null,"ElasticSearch Docker 镜像",-1),B=s("td",null,"7.16.3",-1),m=s("td",null,"Kibana",-1),A=s("td",null,"7.16.3",-1),E=s("td",null,"Docker",-1),_=s("td",null,"20.10.5+dfsg1",-1),v=s("td",null,"docker-compose",-1),f=s("td",null,"1.25.0",-1),D=t('<h2 id="机器参数要求" tabindex="-1">机器参数要求 <a class="header-anchor" href="#机器参数要求" aria-label="Permalink to &quot;机器参数要求&quot;">​</a></h2><p>最少 3 GB 内存，两个 node 至少会需要 1 G 的运存，还要考虑到对 ElasticSearch 节点的监控（使用 node-exporter 进行节点监控）</p><h2 id="前置工作" tabindex="-1">前置工作 <a class="header-anchor" href="#前置工作" aria-label="Permalink to &quot;前置工作&quot;">​</a></h2><h3 id="安装-docker" tabindex="-1">安装 Docker <a class="header-anchor" href="#安装-docker" aria-label="Permalink to &quot;安装 Docker&quot;">​</a></h3>',4),x=t(`<p>也可以执行下面的脚本，每次一行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> update</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ca-certificates</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> gnupg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lsb-release</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> https://download.docker.com/linux/debian/gpg</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --dearmor</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /usr/share/keyrings/docker-archive-keyring.gpg</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;deb [arch=$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --print-architecture</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lsb_release</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -cs</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">) stable&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /etc/apt/sources.list.d/docker.list</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /dev/null</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> update</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker-ce</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker-ce-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> containerd.io</span></span></code></pre></div><h3 id="安装-docker-compose" tabindex="-1">安装 docker-compose <a class="header-anchor" href="#安装-docker-compose" aria-label="Permalink to &quot;安装 docker-compose&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker-compose</span></span></code></pre></div><h2 id="部署-elasticsearch-搜索引擎" tabindex="-1">部署 ElasticSearch 搜索引擎 <a class="header-anchor" href="#部署-elasticsearch-搜索引擎" aria-label="Permalink to &quot;部署 ElasticSearch 搜索引擎&quot;">​</a></h2><h3 id="拉取-elasticsearch-镜像" tabindex="-1">拉取 ElasticSearch 镜像 <a class="header-anchor" href="#拉取-elasticsearch-镜像" aria-label="Permalink to &quot;拉取 ElasticSearch 镜像&quot;">​</a></h3>`,10),q=s("code",null,"docker.elastic.co/elasticsearch/elasticsearch:7.16.3",-1),S=t(`<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker.elastic.co/elasticsearch/elasticsearch:7.16.3</span></span></code></pre></div><h3 id="撰写-elasticsearch-的-docker-compose-yaml-文件" tabindex="-1">撰写 ElasticSearch 的 docker-compose.yaml 文件 <a class="header-anchor" href="#撰写-elasticsearch-的-docker-compose-yaml-文件" aria-label="Permalink to &quot;撰写 ElasticSearch 的 docker-compose.yaml 文件&quot;">​</a></h3><p>通过 <code>docker-compose.yaml</code> 配置文件，我们可以同时部署多个服务，并且创建对应的网络将这些网络连接到一起。</p><p><code>docker-compose.yaml</code> 文件如下：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;2.2&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  es01</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">docker.elastic.co/elasticsearch/elasticsearch:7.16.3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">es01</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">node.name=es01</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cluster.name=es-docker-cluster</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">discovery.seed_hosts=es02</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cluster.initial_master_nodes=es01,es02</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">bootstrap.memory_lock=true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ES_JAVA_OPTS=-Xms512m -Xmx512m</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    ulimits</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      memlock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        soft</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">-1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        hard</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">-1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">data01:/usr/share/elasticsearch/data</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">9200:9200</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    networks</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">elastic</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  es02</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">docker.elastic.co/elasticsearch/elasticsearch:7.16.3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">es02</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">node.name=es02</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cluster.name=es-docker-cluster</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">discovery.seed_hosts=es01</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cluster.initial_master_nodes=es01,es02</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">bootstrap.memory_lock=true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ES_JAVA_OPTS=-Xms512m -Xmx512m</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    ulimits</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      memlock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        soft</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">-1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        hard</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">-1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">data02:/usr/share/elasticsearch/data</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    networks</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">elastic</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  data01</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    driver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">local</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  data02</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    driver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">local</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">networks</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  elastic</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    driver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">bridge</span></span></code></pre></div><p>我把这个文件保存到了 <code>/opt/elk/elasticsearch/docker-compose.yaml</code> 路径，安装时按需调整即可。</p><h3 id="预设定参数" tabindex="-1">预设定参数 <a class="header-anchor" href="#预设定参数" aria-label="Permalink to &quot;预设定参数&quot;">​</a></h3><p>由于是在 Docker 环境中运行，我们还需要调整一下 <code>vm.max_map_count</code> 参数值，该参数的含义：限制一个进程可以拥有的VMA（虚拟内存区域）的数量。</p><blockquote><p>The <code>vm.max_map_count</code> kernel setting must be set to at least <code>262144</code> for production use.</p></blockquote><p>按照官方文档的说法，我们需要把 <code>vm.max_map_count</code> 的参数值设定到 <code>262144</code> 以在生产环境中使用。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> vm.max_map_count=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">262144</span></span></code></pre></div><h2 id="开始运行-elasticsearch-节点" tabindex="-1">开始运行 ElasticSearch 节点 <a class="header-anchor" href="#开始运行-elasticsearch-节点" aria-label="Permalink to &quot;开始运行 ElasticSearch 节点&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -d</span></span></code></pre></div><h3 id="测试效果" tabindex="-1">测试效果 <a class="header-anchor" href="#测试效果" aria-label="Permalink to &quot;测试效果&quot;">​</a></h3><p>通过 SSH 自带的端口转发来转发服务端的端口到本地进行访问：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> elastic-node-01</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 9200:127.0.0.1:9200</span></span></code></pre></div><p>访问节点信息：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> GET</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;localhost:9200/_cat/nodes?v=true&amp;pretty&quot;</span></span></code></pre></div><h2 id="部署-kibana-搜索-ui" tabindex="-1">部署 Kibana 搜索 UI <a class="header-anchor" href="#部署-kibana-搜索-ui" aria-label="Permalink to &quot;部署 Kibana 搜索 UI&quot;">​</a></h2><p>访问 <code>http://localhost:5601</code> 即可</p><h3 id="拉取-kibana-镜像" tabindex="-1">拉取 Kibana 镜像 <a class="header-anchor" href="#拉取-kibana-镜像" aria-label="Permalink to &quot;拉取 Kibana 镜像&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker.elastic.co/kibana/kibana:7.16.3</span></span></code></pre></div><h3 id="撰写-kibana-配置文件" tabindex="-1">撰写 Kibana 配置文件 <a class="header-anchor" href="#撰写-kibana-配置文件" aria-label="Permalink to &quot;撰写 Kibana 配置文件&quot;">​</a></h3><p><code>kibana.yml</code>:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">server.host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">server.shutdownTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">5s</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">elasticsearch.hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;http://es01:9200&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">monitoring.ui.container.elasticsearch.enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 中文本地化</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">i18n.locale</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">zh-CN</span></span></code></pre></div><p>我把这个配置文件放到了 <code>/opt/elk/kibana/config/kibana.yml</code></p><h3 id="创建容器" tabindex="-1">创建容器 <a class="header-anchor" href="#创建容器" aria-label="Permalink to &quot;创建容器&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> kib01</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --net</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> elasticsearch_elastic</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 127.0.0.1:5601:5601</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;ELASTICSEARCH_HOSTS=http://es01:9200&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /opt/elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker.elastic.co/kibana/kibana:7.16.3</span></span></code></pre></div><h3 id="测试效果-1" tabindex="-1">测试效果 <a class="header-anchor" href="#测试效果-1" aria-label="Permalink to &quot;测试效果&quot;">​</a></h3><p>通过 SSH 自带的端口转发来转发服务端的端口到本地进行访问：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> elastic-node-01</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 5601:127.0.0.1:5601</span></span></code></pre></div><p>浏览器访问 <code>http://localhost:5601</code> 即可看到效果</p><h3 id="kibana-错误排查" tabindex="-1">Kibana 错误排查 <a class="header-anchor" href="#kibana-错误排查" aria-label="Permalink to &quot;Kibana 错误排查&quot;">​</a></h3><h4 id="something-went-wrong" tabindex="-1">Something went wrong <a class="header-anchor" href="#something-went-wrong" aria-label="Permalink to &quot;Something went wrong&quot;">​</a></h4><p>如果你遇到了这个错误，并且下方红框内错误提示为：<strong>Request must contain a kbn-xsrf header.</strong> 则说明当前 Header 头部中需要添加 <code>kbn-xsrf</code> 头部字段。</p><p>Chrome 浏览器可以用 ModHeader 插件来完成。 服务端可以设定一个返回的 Header 来解决该问题。</p>`,36);function P(w,T,K,L,N,V){const h=l("NolebasePageProperties"),e=l("VPNolebaseInlineLinkPreview"),p=l("NolebaseGitContributors"),k=l("NolebaseGitChangelog");return o(),d("div",null,[g,a(h),y,C,s("table",u,[F,s("tbody",null,[s("tr",null,[b,B,s("td",null,[a(e,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/setup.html",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("https://www.elastic.co/guide/en/elasticsearch/reference/current/setup.html")]),_:1})])]),s("tr",null,[m,A,s("td",null,[a(e,{href:"https://www.elastic.co/guide/en/kibana/current/docker.html",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("https://www.elastic.co/guide/en/kibana/current/docker.html")]),_:1})])]),s("tr",null,[E,_,s("td",null,[a(e,{href:"https://docs.docker.com/",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("https://docs.docker.com/")]),_:1})])]),s("tr",null,[v,f,s("td",null,[a(e,{href:"https://docs.docker.com/compose/",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("https://docs.docker.com/compose/")]),_:1})])])])]),D,s("p",null,[i("可以参考官方指南在 Debian 11 上安装 Docker："),a(e,{href:"https://docs.docker.com/engine/install/debian/",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("Install Docker Engine on Debian | Docker Documentation")]),_:1})]),x,s("p",null,[i("此处引用了 "),q,i(" 镜像，大家可以前往 "),a(e,{href:"https://www.docker.elastic.co/r/elasticsearch",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("Elastic Docker 注册中心")]),_:1}),i(" 查看当前可用的 ElasticSearch 镜像标签。")]),S,a(p),a(k)])}const H=r(c,[["render",P]]);export{G as __pageData,H as default};
