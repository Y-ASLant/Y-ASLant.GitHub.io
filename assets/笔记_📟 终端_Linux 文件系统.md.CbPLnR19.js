import{_ as o,c as i,I as t,j as r,a as d,au as l,D as s,o as p}from"./chunks/framework.RMxno62p.js";const f=JSON.parse('{"title":"Linux 文件系统","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/📟 终端/Linux 文件系统.md","filePath":"笔记/📟 终端/Linux 文件系统.md"}'),c={name:"笔记/📟 终端/Linux 文件系统.md"},h=r("h1",{id:"linux-文件系统",tabindex:"-1"},[d("Linux 文件系统 "),r("a",{class:"header-anchor",href:"#linux-文件系统","aria-label":'Permalink to "Linux 文件系统"'},"​")],-1),g=l(`<h2 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-label="Permalink to &quot;概览&quot;">​</a></h2><table tabindex="0"><thead><tr><th>目录名</th><th>说明</th></tr></thead><tbody><tr><td><strong>/bin</strong></td><td>bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。</td></tr><tr><td><strong>/boot</strong></td><td>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</td></tr><tr><td><strong>/dev</strong></td><td>dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</td></tr><tr><td><strong>/etc</strong></td><td>etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。</td></tr><tr><td><strong>/home</strong></td><td>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。</td></tr><tr><td><strong>/lib</strong></td><td>lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</td></tr><tr><td><strong>/lost+found</strong></td><td>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</td></tr><tr><td><strong>/media</strong></td><td>linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。</td></tr><tr><td><strong>/mnt</strong></td><td>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 /mnt/ 上，然后进入该目录就可以查看光驱里的内容了。</td></tr><tr><td><strong>/opt</strong></td><td>opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</td></tr><tr><td><strong>/proc</strong></td><td>proc 是 Processes(进程) 的缩写，/proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。<br>这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：<br><code>echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</code></td></tr><tr><td><strong>/root</strong></td><td>该目录为系统管理员，也称作超级权限者的用户主目录。</td></tr><tr><td><strong>/sbin</strong></td><td>s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序。</td></tr><tr><td><strong>/selinux</strong></td><td>这个目录是 Redhat/CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</td></tr><tr><td><strong>/srv</strong></td><td>该目录存放一些服务启动之后需要提取的数据。</td></tr><tr><td><strong>/sys</strong></td><td>这是 Linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。sysfs 文件系统集成了下面3种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</td></tr><tr><td><strong>/tmp</strong></td><td>tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的。</td></tr><tr><td><strong>/usr</strong></td><td>usr 是 unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</td></tr><tr><td><strong>/usr/bin</strong></td><td>系统用户使用的应用程序。</td></tr><tr><td><strong>/usr/sbin</strong></td><td>超级用户使用的比较高级的管理程序和系统守护程序。</td></tr><tr><td><strong>/usr/src</strong></td><td>内核源代码默认的放置目录。</td></tr><tr><td><strong>/var</strong></td><td>var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</td></tr><tr><td><strong>/run</strong></td><td>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。</td></tr></tbody></table><h2 id="特别目录" tabindex="-1">特别目录 <a class="header-anchor" href="#特别目录" aria-label="Permalink to &quot;特别目录&quot;">​</a></h2><p>在 Linux 系统中，有几个目录是比较重要的，平时需要注意不要误删除或者随意更改内部文件。</p><p>值得提出的是，/bin, /usr/bin 是给系统用户使用的指令（除root外的通用户），而/sbin, /usr/sbin 则是给 root 使用的指令。</p><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p><strong>/etc</strong>： 上边也提到了，这个是系统中的配置文件，如果你更改了该目录下的某个文件可能会导致系统不能启动。</p><h3 id="可执行文件" tabindex="-1">可执行文件 <a class="header-anchor" href="#可执行文件" aria-label="Permalink to &quot;可执行文件&quot;">​</a></h3><p><strong>/bin, /sbin, /usr/bin, /usr/sbin</strong>: 这是系统预设的执行文件的放置目录，比如 ls 就是在 /bin/ls 目录下的。</p><p>你在命令行里可以直接输入使用的命令，其可执行文件一般就在以下几个位置：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/bin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/sbin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/usr/bin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/usr/sbin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/usr/local/bin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/usr/local/sbin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/home/USER/.local/bin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/home/USER/.local/sbin</span></span></code></pre></div><p>如果你写了一个脚本/程序，想在任何时候都能直接调用，可以把这个脚本/程序添加到上述目录中。</p><h3 id="日志和记录" tabindex="-1">日志和记录 <a class="header-anchor" href="#日志和记录" aria-label="Permalink to &quot;日志和记录&quot;">​</a></h3><p><strong>/var</strong>： 这是一个非常重要的目录，系统上跑了很多程序，那么每个程序都会有相应的日志产生，而这些日志就被记录到这个目录下，具体在 /var/log 目录下，另外 mail 的预设放置也是在这里。</p><p>如果某个程序崩溃了，可以到 <code>/val/log</code> 中尝试寻找出错信息，到 <code>/tmp</code> 中寻找残留的临时文件。</p><h3 id="设备和-sata-硬盘" tabindex="-1">设备和 SATA 硬盘 <a class="header-anchor" href="#设备和-sata-硬盘" aria-label="Permalink to &quot;设备和 SATA 硬盘&quot;">​</a></h3><p>设备文件在 <code>/dev</code> 目录，但是一般来说系统会自动帮你挂载诸如 U 盘之类的设备，可以到 <code>/media</code> 文件夹访问设备内容。</p>`,17);function u(b,_,k,m,x,v){const n=s("NolebasePageProperties"),a=s("NolebaseGitContributors"),e=s("NolebaseGitChangelog");return p(),i("div",null,[h,t(n),g,t(a),t(e)])}const C=o(c,[["render",u]]);export{f as __pageData,C as default};
