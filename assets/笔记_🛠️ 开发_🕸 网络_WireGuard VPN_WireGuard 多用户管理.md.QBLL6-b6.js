import{_ as d,c as r,I as a,j as i,a as s,w as n,au as t,D as e,o}from"./chunks/framework.RMxno62p.js";const I=JSON.parse('{"title":"WireGuard VPN 多用户管理","description":"","frontmatter":{"tags":["计算机/网络/WireGuard","计算机/网络/VPN/WireGuard","计算机/操作系统/Linux","计算机/操作系统/Linux/命令行","操作系统/Linux","命令行","命令行/sed","计算机/网络","数学/密码学/非对称加密","操作系统/macOS","操作系统/Windows"]},"headers":[],"relativePath":"笔记/🛠️ 开发/🕸 网络/WireGuard VPN/WireGuard 多用户管理.md","filePath":"笔记/🛠️ 开发/🕸 网络/WireGuard VPN/WireGuard 多用户管理.md"}'),c={name:"笔记/🛠️ 开发/🕸 网络/WireGuard VPN/WireGuard 多用户管理.md"},g=i("h1",{id:"wireguard-vpn-多用户管理",tabindex:"-1"},[s("WireGuard VPN 多用户管理 "),i("a",{class:"header-anchor",href:"#wireguard-vpn-多用户管理","aria-label":'Permalink to "WireGuard VPN 多用户管理"'},"​")],-1),y=t('<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>其实 WireGuard 的多用户配置特别简单，只需要生成一对客户端密匙（公钥+私钥），在服务端配置文件中新增一段 <strong><code>[Peer]</code></strong> 写上<strong>新的客户端公钥 <code>PublicKey</code> 和客户端的内网 IP 地址</strong> <code>Endpoint</code> 即可。 当然我们可以用命令快捷添加，或者手动修改服务端配置文件也行。 而各客户端账号配置文件的区别也只是 <strong><code>[Interface]</code></strong> 中的<strong>客户端私钥和客户端内网 IP 地址</strong>不同罢了。</p><p><strong>另外我们需要明白一个对等原则：</strong></p><ul><li>服务端配置文件中的 <strong><code>[Interface]</code></strong> 是保存自己的服务端私钥，而客户端配置文件中的 <strong><code>[Interface]</code></strong> 同样保存自己的客户端私钥。</li><li>服务端配置文件中的 <strong><code>[Peer]</code></strong> 是保存客户端的公钥，而客户端配置文件中的 <strong><code>[Peer]</code></strong> 是保存服务端的公钥。</li></ul><p>即：服务端与客户端都是互相保存自己的私钥在 <strong><code>[Interface]</code></strong> 中，互相保存对方公钥在 <strong><code>[Peer]</code></strong> 中。</p><h2 id="客户端生成新的连接用密钥" tabindex="-1">客户端生成新的连接用密钥 <a class="header-anchor" href="#客户端生成新的连接用密钥" aria-label="Permalink to &quot;客户端生成新的连接用密钥&quot;">​</a></h2><p>以下步骤是动态添加客户端配置（<strong>以下配置前提是你已经配置过 WireGuard 配置文件并启动了</strong>）。 你也可以手动修改配置文件 <strong><code>/etc/wireguard/wg0.conf</code></strong>，记得修改完重启一下。以下动态添加无需重启。</p><h3 id="重新生成一对客户端密匙" tabindex="-1">重新生成一对客户端密匙 <a class="header-anchor" href="#重新生成一对客户端密匙" aria-label="Permalink to &quot;重新生成一对客户端密匙&quot;">​</a></h3><p>你可以运行下面的命令来生成客户端用的配置文件到当前所在目录：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> genkey</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cprivatekey1</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pubkey</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cpublickey1</span></span></code></pre></div><p>命令说明：</p><ol><li><code>cprivatekey1</code> 为客户端私钥</li><li><code>cpublickey1</code> 为客户端公钥。</li></ol><p>如果你想放到另一个目录中也可以，只要在配置 <code>wg0.conf</code> 或者说 WireGuard 的配置文件的时候能够查看到内容即可：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-60zbV" id="tab-i5CkhM4" checked><label for="tab-i5CkhM4">多行</label><input type="radio" name="group-60zbV" id="tab-luFdeiq"><label for="tab-luFdeiq">单行</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/.config/wireguard</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> genkey</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> tee</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/.config/wireguard/cprivatekey1</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pubkey</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> tee</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/.config/wireguard/cpublickey1</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/.config/wireguard</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> genkey</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> tee</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/.config/wireguard/cprivatekey1</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pubkey</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> tee</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/.config/wireguard/cpublickey1</span></span></code></pre></div></div></div><h2 id="服务端配置文件添加用户" tabindex="-1">服务端配置文件添加用户 <a class="header-anchor" href="#服务端配置文件添加用户" aria-label="Permalink to &quot;服务端配置文件添加用户&quot;">​</a></h2><h3 id="服务器上执行添加客户端配置代码-新增一个-peer" tabindex="-1">服务器上执行添加客户端配置代码（新增一个 <code>[peer]</code>） <a class="header-anchor" href="#服务器上执行添加客户端配置代码-新增一个-peer" aria-label="Permalink to &quot;服务器上执行添加客户端配置代码（新增一个 `[peer]`）&quot;">​</a></h3><p>你可以把上一步生成的 <code>cpublickey1</code> 或者 <code>$HOME/.config/wireguard/cpublickey1</code> 放到服务端存起来：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-c4nP_" id="tab-xwAih4g" checked><label for="tab-xwAih4g">多行</label><input type="radio" name="group-c4nP_" id="tab-XoaDkDL"><label for="tab-XoaDkDL">单行</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /etc/wireguard/clients/</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;&lt;之前在客户端上生成的 cpublickey1 的内容&gt;&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /etc/wireguard/clients/cpublickey1</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /etc/wireguard/clients/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;&lt;之前在客户端上生成的 cpublickey1 的内容&gt;&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /etc/wireguard/clients/cpublickey1</span></span></code></pre></div></div></div><p>然后我们在服务端这边添加需要的 <code>[Peer]</code></p>',19),F={class:"vp-code-group vp-adaptive-theme"},u=t('<div class="tabs"><input type="radio" name="group-Kn13B" id="tab-qHkZcZn" checked><label for="tab-qHkZcZn">以非 root 用户执行</label><input type="radio" name="group-Kn13B" id="tab-mCknLQM"><label for="tab-mCknLQM">以 root 用户执行</label></div>',1),C={class:"blocks"},b=t('<div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> peer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /etc/wireguard/clients/cpublickey1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">allowed-ips</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 10.0.0.3/32</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> peer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /etc/wireguard/clients/cpublickey1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">allowed-ips</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 10.0.0.3/32</span></span></code></pre></div><p>命令说明：</p>',3),v=i("code",null,"$(cat /etc/wireguard/clients/cpublickey1)",-1),A=i("li",null,[i("code",null,"10.0.0.3/32"),s(" 这个是客户端和服务端的内网 IP 地址，请参考自己的服务端配置的 "),i("code",null,"AllowedIPs"),s(" 字段的值来进行配置，按序递增最后一位（"),i("code",null,".3"),s("），服务端与众客户端不能配置为重复的 IP")],-1),E=t(`<h3 id="配置服务端的-wireguard-接口" tabindex="-1">配置服务端的 WireGuard 接口 <a class="header-anchor" href="#配置服务端的-wireguard-接口" aria-label="Permalink to &quot;配置服务端的 WireGuard 接口&quot;">​</a></h3><p>你可以使用 <code>wg</code> 来查看现有的 WireGuard 的网络接口的配置和状态：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">interface:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  public</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ********************</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 服务端公钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  private</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (hidden)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  listening</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> port:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 443</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">peer:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ********************</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 旧客户端账号的公钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  allowed</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ips:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 10.0.0.2/32</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 旧客户端账号的内网 IP 地址</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">peer:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ********************</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 新客户端账号的公钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  allowed</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ips:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 10.0.0.3/32</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 新客户端账号的内网 IP 地址</span></span></code></pre></div><p>以上内容仅为输出示例（仅供参考）</p><p>如果服务端侧 WireGuard 配置符合预期，那么我们就保存到配置文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg-quick</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span></span></code></pre></div><h2 id="为客户端添加用于连接到服务端的配置文件" tabindex="-1">为客户端添加用于连接到服务端的配置文件 <a class="header-anchor" href="#为客户端添加用于连接到服务端的配置文件" aria-label="Permalink to &quot;为客户端添加用于连接到服务端的配置文件&quot;">​</a></h2><p>新客户端配置文件，和其他客户端账号的配置文件只有 <code>[Interface]</code> 中的客户端私钥、内网 IP 地址参数不一样。</p><p>下面是配置文件的填写说明：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[Interface]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 客户端的私钥，对应服务器配置中的客户端公钥（自动读取上面刚刚生成的密匙内容）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">PrivateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> &lt;上面创建的 cprivatekey1 的内容&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 客户端监听端口，一般为 51820</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ListenPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> 51820</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 客户端的内网IP地址（如果上面你添加的内网IP不是 .3 请自行修改）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Address</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> 10.0.0.3/24</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 解析域名用的DNS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">DNS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> 8.8.8.8</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 保持默认</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">MTU</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> 1420</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[Peer]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 服务器的公钥，对应服务器的私钥（自动读取上面刚刚生成的密匙内容）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">PublicKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> &lt;服务端的公钥，可以在服务端上执行 wg 命令来获取&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 服务器地址和端口，下面的 X.X.X.X 记得更换为你的服务器公网IP，端口请填写服务端配置时的监听端口</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Endpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> &lt;服务端公网 IP 或者可被客户端连接的 IP&gt;:&lt;服务端配置的 ListenPort&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 鉴于不同的使用场景，作为客户端有两种设定方案</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 1. 设置为全部 IP 段，可以转发所有流量，就像是以前 VPN 的工作模式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># AllowedIPs = 0.0.0.0/0, ::0/0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 2. 设置为特定的 IP 段，可以转发特定 IP 的流量，适用于内网和子网</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 比如内网的网段是 10.10.0.0，则可以填写为 10.10.0.0/24</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 请务必保持与服务端一致</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">AllowedIPs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> 10.0.0.0/24</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 保持连接，如果客户端或服务端是 NAT 网络(比如国内大多数家庭宽带没有公网IP，都是NAT)，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 那么就需要添加这个参数定时链接服务端(单位：秒)，如果你的服务器和你本地都不是 NAT 网络，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 那么建议不使用该参数（设置为0，或客户端配置文件中删除这行）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">PersistentKeepalive</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> 25</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">想要直接复制粘贴上面的示例配置文件？</p><p></p><p>接口配置文件中不允许出现 <code>#</code> 字符，这里我们可以把上面的内容复制并粘贴到本地的 <code>wg0-client.conf</code>，并且填写好之后，添加到到下面命令中对应的地方：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-_K4rX" id="tab-tO4B3N-" checked><label for="tab-tO4B3N-">以非 root 用户执行</label><input type="radio" name="group-_K4rX" id="tab-5uGVbOe"><label for="tab-5uGVbOe">以 root 用户执行</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0-client.conf</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> sed</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;/^#/d;/^\\s*$/d&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0.conf</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0-client.conf</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> sed</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;/^#/d;/^\\s*$/d&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0.conf</span></span></code></pre></div></div></div><p>命令说明：</p><ol><li><code>cat</code> 可以读取预先配置好的带注释的文件作为字符串输出给管道符 <code>|</code> 并传递给下一个命令，在这里，下一个命令为 <code>sed</code></li><li><code>sed &#39;/^#/d;/^\\s*$/d&#39;</code> 可以过滤输出 <code>#</code> 开头的行和空行</li><li><code>wg0.conf</code> 是 WireGuard 的配置文件，根据不同的系统，可以放到不同的目录： <ul><li>Windows: \`\`（我还没有部署过，之后会更新到这里）</li><li>macOS: <code>/usr/local/etc/wireguard/wg0.conf</code></li><li>计算机/操作系统/Linux: <code>/etc/wireguard/wg0.conf</code></li></ul></li></ol></div><h2 id="服务端配置文件删除用户" tabindex="-1">服务端配置文件删除用户 <a class="header-anchor" href="#服务端配置文件删除用户" aria-label="Permalink to &quot;服务端配置文件删除用户&quot;">​</a></h2><p>要删除呢也很简单，首先你需要知道你要删除用户的客户端公钥（例如上面刚刚生成的 <code>cpublickey1</code>）。 当然，你也可以手动打开配置文件删除，记得修改后重启。下面的动态删除无需重启。</p><h3 id="_1-如果客户端公钥文件还在" tabindex="-1">1. 如果客户端公钥文件还在 <a class="header-anchor" href="#_1-如果客户端公钥文件还在" aria-label="Permalink to &quot;1. 如果客户端公钥文件还在&quot;">​</a></h3><p>可以执行这个命令删除：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-eE_mX" id="tab-cP3Unge" checked><label for="tab-cP3Unge">以非 root 用户执行</label><input type="radio" name="group-eE_mX" id="tab-u6JuvGX"><label for="tab-u6JuvGX">以 root 用户执行</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> peer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cpublickey1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">remove</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> peer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cpublickey1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">remove</span></span></code></pre></div></div></div><p><strong>注意：该命令执行后，就可以跳过下面这段命令了，直接保存配置文件即可。</strong></p><h3 id="_2-如果客户端公钥文件已删除" tabindex="-1">2. 如果客户端公钥文件已删除 <a class="header-anchor" href="#_2-如果客户端公钥文件已删除" aria-label="Permalink to &quot;2. 如果客户端公钥文件已删除&quot;">​</a></h3><p>可以通过 <code>wg</code> 命令看到客户端的公钥：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  interface:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    public</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ********************</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> #服务端公钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    private</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (hidden)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    listening</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> port:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 443</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  peer:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ********************</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> #客户端账号的公钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    allowed</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ips:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 10.0.0.2/32</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> #客户端账号的内网IP地址</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  peer:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ********************</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> #客户端账号的公钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    allowed</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ips:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 10.0.0.3/32</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> #客户端账号的内网IP地址</span></span></code></pre></div><p>以上内容仅为输出示例（仅供参考）</p><p>复制你要删除的客户端账号的公钥（<code>peer</code> 后面的字符），替换下面命令中的 <code>xxxxxxx</code> 并执行即可</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-tZhyb" id="tab-L__8-Hl" checked><label for="tab-L__8-Hl">以非 root 用户执行</label><input type="radio" name="group-tZhyb" id="tab-LIYrZZX"><label for="tab-LIYrZZX">以 root 用户执行</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> peer</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">客户端账号的公钥（peer</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 字样后面的字符</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> remove</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> peer</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">客户端账号的公钥（peer</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 字样后面的字符</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> remove</span></span></code></pre></div></div></div><p>执行后，我们在用 <code>wg-quick</code> 命令保存和提交状态：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-dJrfq" id="tab-8c2uvuw" checked><label for="tab-8c2uvuw">以非 root 用户执行</label><input type="radio" name="group-dJrfq" id="tab-X6u5fSb"><label for="tab-X6u5fSb">以 root 用户执行</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg-quick</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wg-quick</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wg0</span></span></code></pre></div></div></div><p>然后可以用 <code>wg</code> 来查看是否配置完成。</p>`,26);function B(f,_,m,D,w,P){const h=e("NolebasePageProperties"),l=e("VPNolebaseInlineLinkPreview"),p=e("NolebaseGitContributors"),k=e("NolebaseGitChangelog");return o(),r("div",null,[g,a(h),i("p",null,[s("此教程默认已安装和配置过 WireGuard 服务端，如果没有，可以前往 "),a(l,{href:"./WireGuard 安装.html"},{default:n(()=>[s("WireGuard 安装")]),_:1}),s(" 进行安装和 "),a(l,{href:"./WireGuard 服务端配置.html"},{default:n(()=>[s("WireGuard 配置")]),_:1}),s(" 进行配置。")]),y,i("div",F,[u,i("div",C,[b,i("ol",null,[i("li",null,[v,s(" 使用 "),a(l,{href:"./../../../📟 终端/Linux 命令/文档读写/cat 输出文件.html"},{default:n(()=>[s("cat 输出文件")]),_:1}),s(" 命令获取客户端公钥")]),A])])]),E,a(p),a(k)])}const q=d(c,[["render",B]]);export{I as __pageData,q as default};
