import{_ as l,c as o,I as t,j as s,a as r,au as h,D as a,o as d}from"./chunks/framework.RMxno62p.js";const B=JSON.parse('{"title":"mv 剪贴、移动","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/📟 终端/Linux 命令/文件管理/mv 剪贴、移动.md","filePath":"笔记/📟 终端/Linux 命令/文件管理/mv 剪贴、移动.md"}'),p={name:"笔记/📟 终端/Linux 命令/文件管理/mv 剪贴、移动.md"},c=s("h1",{id:"mv-剪贴、移动",tabindex:"-1"},[s("code",null,"mv"),r(" 剪贴、移动 "),s("a",{class:"header-anchor",href:"#mv-剪贴、移动","aria-label":'Permalink to "`mv` 剪贴、移动"'},"​")],-1),k=h('<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p><strong>m</strong>o<strong>v</strong>e，移动的含义。使用这个命令可以把文件移动到别的地方（重命名），这个操作对于同一个分区、硬盘的文件而言十分快速，因为只需要改变在本文件系统中的路径地址即可，如果需要跨分区、甚至是跨硬盘设备的话，效率和复制文件一致。</p><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">源路</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">目标路</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><ol><li>移动单个文件</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> meow</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> meow2</span></span></code></pre></div><ol start="2"><li>移动文件夹内文件到另一个文件夹</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> test/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> test2/</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><h3 id="其他参数" tabindex="-1">其他参数 <a class="header-anchor" href="#其他参数" aria-label="Permalink to &quot;其他参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><strong>-b</strong></td><td>当目标文件或目录存在时，在执行覆盖前，会为其创建一个备份</td></tr><tr><td><strong>-i</strong></td><td>如果指定移动的源目录或文件与目标的目录或文件同名，则会先询问是否覆盖旧文件，输入 y 表示直接覆盖，输入 n 表示取消该操作</td></tr><tr><td><strong>-f</strong></td><td>如果指定移动的源目录或文件与目标的目录或文件同名，不会询问，直接覆盖旧文件</td></tr><tr><td><strong>-n</strong></td><td>不要覆盖任何已存在的文件或目录</td></tr><tr><td><strong>-u</strong></td><td>当源文件比目标文件新或者目标文件不存在时，才执行移动操作</td></tr></tbody></table>',12);function g(m,_,b,u,v,y){const e=a("NolebasePageProperties"),i=a("NolebaseGitContributors"),n=a("NolebaseGitChangelog");return d(),o("div",null,[c,t(e),k,t(i),t(n)])}const F=l(p,[["render",g]]);export{B as __pageData,F as default};
