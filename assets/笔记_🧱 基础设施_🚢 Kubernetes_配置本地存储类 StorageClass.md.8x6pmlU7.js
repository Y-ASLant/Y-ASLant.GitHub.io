import{_ as l,c as p,I as s,j as a,a as h,au as k,D as i,o as r}from"./chunks/framework.RMxno62p.js";const A=JSON.parse('{"title":"配置本地存储类 StorageClass","description":"","frontmatter":{"tags":["运维/云原生/Kubernetes","运维/云原生/Kubernetes/K8s","开发/云原生/Kubernetes","开发/云原生/Kubernetes/K8s","开发/云原生/Kubernetes/存储类","开发/云原生/Kubernetes/存储类/StorageClass","开发/云原生/Kubernetes/存储","开发/云原生/容器存储接口","开发/云原生/容器存储接口/CSI","开发/云原生/Kubernetes/持久卷","开发/云原生/Kubernetes/持久卷/PresistentVolume","开发/云原生/Kubernetes/持久卷申领/PresistentVolumeClaim","开发/云原生/Kubernetes/持久卷申领"]},"headers":[],"relativePath":"笔记/🧱 基础设施/🚢 Kubernetes/配置本地存储类 StorageClass.md","filePath":"笔记/🧱 基础设施/🚢 Kubernetes/配置本地存储类 StorageClass.md"}'),o={name:"笔记/🧱 基础设施/🚢 Kubernetes/配置本地存储类 StorageClass.md"},d=a("h1",{id:"配置本地存储类-storageclass",tabindex:"-1"},[h("配置本地存储类 StorageClass "),a("a",{class:"header-anchor",href:"#配置本地存储类-storageclass","aria-label":'Permalink to "配置本地存储类 StorageClass"'},"​")],-1),g=k(`<p>对于没有安装其他的 CSI（容器存储接口）驱动和第三方存储插件（诸如 Ceph，或者直接使用的 EBS，AWS Elastic Kubernetes Service 这样的服务）的情况下，在使用持久卷（PersistentVolume）和持久卷申领（PersistentVolumeClaim）之前你需要配置一下基于没有提供商的存储类 StorageClass：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">storage.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">StorageClass</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">local-storage</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">provisioner</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">kubernetes.io/no-provisioner</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">volumeBindingMode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">WaitForFirstConsumer</span></span></code></pre></div><p>在 StackOverflow 上和其他若干众多的 Kubernetes 知识点网站上也会使用 <code>local-path</code>，<code>local</code> 以及 <code>manual</code> 作为 <code>metadata.name</code> 的值：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-w1fRg" id="tab-xXmS8Xt" checked><label for="tab-xXmS8Xt">命名为 local-path</label><input type="radio" name="group-w1fRg" id="tab-uu6x6oh"><label for="tab-uu6x6oh">命名为 local</label><input type="radio" name="group-w1fRg" id="tab-pME7_UV"><label for="tab-pME7_UV">命名为 manual</label></div><div class="blocks"><div class="language-yaml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">storage.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">StorageClass</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">local-path</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">provisioner</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">kubernetes.io/no-provisioner</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">volumeBindingMode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">WaitForFirstConsumer</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">storage.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">StorageClass</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">local-path</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">provisioner</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">kubernetes.io/no-provisioner</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">volumeBindingMode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">WaitForFirstConsumer</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">storage.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">StorageClass</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">local-path</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">provisioner</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">kubernetes.io/no-provisioner</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">volumeBindingMode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">WaitForFirstConsumer</span></span></code></pre></div></div></div><p>在这之后你就可以继续进行持久卷（PresistentVolume）和持久卷申领（PresistentVolumeClaim）的配置了。</p>`,5);function c(y,C,B,u,m,b){const e=i("NolebasePageProperties"),n=i("NolebaseGitContributors"),t=i("NolebaseGitChangelog");return r(),p("div",null,[d,s(e),g,s(n),s(t)])}const F=l(o,[["render",c]]);export{A as __pageData,F as default};
