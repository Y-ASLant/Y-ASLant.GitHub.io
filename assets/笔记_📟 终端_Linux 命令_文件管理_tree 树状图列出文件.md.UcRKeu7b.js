import{_ as n,c as r,I as t,j as s,a as o,au as l,D as a,o as h}from"./chunks/framework.RMxno62p.js";const A=JSON.parse('{"title":"tree 树状图列出文件","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/📟 终端/Linux 命令/文件管理/tree 树状图列出文件.md","filePath":"笔记/📟 终端/Linux 命令/文件管理/tree 树状图列出文件.md"}'),p={name:"笔记/📟 终端/Linux 命令/文件管理/tree 树状图列出文件.md"},g=s("h1",{id:"tree-树状图列出文件",tabindex:"-1"},[s("code",null,"tree"),o(" 树状图列出文件 "),s("a",{class:"header-anchor",href:"#tree-树状图列出文件","aria-label":'Permalink to "`tree` 树状图列出文件"'},"​")],-1),k=l(`<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>tree，树状的含义，使用该命令可以以树状图列出目录的内容</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h3><p>此处 <code>-aACdDfFgilnNpqstux</code> 是参数，<strong>参数 <code>I</code></strong> 和 <strong>参数 <code>P</code></strong> 是可选的。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">tree</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [-aACdDfFgilnNpqstux][-I </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">范本样式</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">][-P </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">范本样式</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">][目录...]</span></span></code></pre></div><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> tree</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 当前目录下的文件结构</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> hello</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> tests</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> meow</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    └──</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> test1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        └──</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> meow2</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><h3 id="其他参数" tabindex="-1">其他参数 <a class="header-anchor" href="#其他参数" aria-label="Permalink to &quot;其他参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>子参数</th><th>说明</th></tr></thead><tbody><tr><td><strong>-a</strong></td><td></td><td>显示所有文件和目录。</td></tr><tr><td><strong>-A</strong></td><td></td><td>使用ASNI绘图字符显示树状图而非以ASCII字符组合。</td></tr><tr><td><strong>-C</strong></td><td></td><td>在文件和目录清单加上色彩，便于区分各种类型。</td></tr><tr><td><strong>-d</strong></td><td></td><td>显示目录名称而非内容。</td></tr><tr><td><strong>-D</strong></td><td></td><td>列出文件或目录的更改时间。</td></tr><tr><td><strong>-f</strong></td><td></td><td>在每个文件或目录之前，显示完整的相对路径名称。</td></tr><tr><td><strong>-F</strong></td><td></td><td>在执行文件，目录，Socket，符号连接，管道名称名称，各自加上&quot;*&quot;,&quot;/&quot;,&quot;=&quot;,&quot;@&quot;,&quot;</td></tr><tr><td><strong>-g</strong></td><td></td><td>列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。</td></tr><tr><td><strong>-i</strong></td><td></td><td>不以阶梯状列出文件或目录名称。</td></tr><tr><td><strong>-L</strong></td><td></td><td>level 限制目录显示层级。</td></tr><tr><td><strong>-l</strong></td><td></td><td>如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。</td></tr><tr><td><strong>-n</strong></td><td></td><td>不在文件和目录清单加上色彩。</td></tr><tr><td><strong>-N</strong></td><td></td><td>直接列出文件和目录名称，包括控制字符。</td></tr><tr><td><strong>-p</strong></td><td></td><td>列出权限标示。</td></tr><tr><td><strong>-P</strong></td><td><code>&lt;范本样式&gt;</code></td><td>只显示符合范本样式的文件或目录名称。</td></tr><tr><td><strong>-q</strong></td><td></td><td>用&quot;?&quot;号取代控制字符，列出文件和目录名称。</td></tr><tr><td><strong>-s</strong></td><td></td><td>列出文件或目录大小。</td></tr><tr><td><strong>-t</strong></td><td></td><td>用文件和目录的更改时间排序。</td></tr><tr><td><strong>-u</strong></td><td></td><td>列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。</td></tr><tr><td><strong>-x</strong></td><td></td><td>将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。</td></tr></tbody></table>`,10);function c(u,_,F,C,b,y){const e=a("NolebasePageProperties"),d=a("NolebaseGitContributors"),i=a("NolebaseGitChangelog");return h(),r("div",null,[g,t(e),k,t(d),t(i)])}const q=n(p,[["render",c]]);export{A as __pageData,q as default};
