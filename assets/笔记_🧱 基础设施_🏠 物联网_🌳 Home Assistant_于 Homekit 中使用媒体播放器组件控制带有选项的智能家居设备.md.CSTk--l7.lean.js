import{_ as d,c as r,I as a,j as s,a as i,w as e,au as t,D as l,o}from"./chunks/framework.RMxno62p.js";const c="/assets/homekit-use-media-player-as-a-controller-homekit-screenshot-01.BtlrTQSV.jpg",g="/assets/homekit-use-media-player-as-a-controller-homekit-screenshot-02.Dyk7KMdv.jpg",y="/assets/homekit-use-media-player-as-a-controller-hass-screenshot-01.DNMKD5sk.png",_="/assets/homekit-use-media-player-as-a-controller-hass-screenshot-02.B8NSYhsG.png",B="/assets/homekit-use-media-player-as-a-controller-hass-screenshot-03.X1WkgU7T.png",u="/assets/homekit-use-media-player-as-a-controller-record-01.DoCcuDfy.mov",A="/assets/homekit-use-media-player-as-a-controller-record-02.BfRd3Jde.mov",cs=JSON.parse('{"title":"于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备","description":"","frontmatter":{"tags":["开发/标记语言/YAML","开源/软件/Home-Assistant","开源/软件/Home-Assistant/HASS","软件/iOS/Homekit","软件/macOS/Homekit","软件/iPadOS/Homekit","开发/Xcode/Additional-Tools-for-Xcode","开发/Xcode","开源/软件/Home-Assistant/模式选择器","开源/软件/Home-Assistant/空调控制器","开源/软件/Home-Assistant/媒体选择器","物联网/智能家居","物联网/智能家居/Home-Assistant","物联网/智能家居/Home-Assistant/HASS","物联网/智能家居/Homekit","运维/物联网","操作系统/iOS","操作系统/iPadOS"]},"headers":[],"relativePath":"笔记/🧱 基础设施/🏠 物联网/🌳 Home Assistant/于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备.md","filePath":"笔记/🧱 基础设施/🏠 物联网/🌳 Home Assistant/于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备.md"}'),m={name:"笔记/🧱 基础设施/🏠 物联网/🌳 Home Assistant/于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备.md"},C=s("h1",{id:"于-homekit-中使用媒体播放器组件控制带有选项的智能家居设备",tabindex:"-1"},[i("于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备 "),s("a",{class:"header-anchor",href:"#于-homekit-中使用媒体播放器组件控制带有选项的智能家居设备","aria-label":'Permalink to "于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备"'},"​")],-1),f=t("",10),E=s("sup",{class:"footnote-ref"},[s("a",{href:"#fn1",id:"fnref1"},"[1]")],-1),F={class:"tip custom-block github-alert"},b=s("p",{class:"custom-block-title"},"小贴士",-1),v=s("sup",{class:"footnote-ref"},[s("a",{href:"#fn2",id:"fnref2"},"[2]")],-1),H=s("p",null,[s("strong",null,"注意：TV（电视或智能电视）类型的配件是无法通过 Homekit Accessory Simulator 进行模拟的（我此时无法找到相关的开发工具，也许是需要单独的应用程序支持才能进行模拟）。")],-1),x=s("p",null,[i("那我们换一条路，也许你知道，在众多配件与 Homekit 所兼容的配件中，"),s("strong",null,"电视"),i(" （通常是智能电视，比如 LG 和 Sony 的电视）和 "),s("strong",null,"空调控制器"),i(" （通常在中国大陆是作为 "),s("strong",null,"空调伴侣"),i(" 的形式出现）是最明显的能支持模式选择器的两个设备（我通过 HomeKit Accessory Simulator 没有找到更接近或者更类似的设备，如果大家阅读本文之后有尝试找到更适合的 Homekit 配件的话也可以在本知识库的 GitHub 仓库提交 Issue 告知）。")],-1),D=s("div",{flex:"","justify-center":"","text-center":"","space-x-4":""},[s("div",{"flex-1":""},[s("img",{src:c}),s("p",null,"电视配件")]),s("div",{"flex-1":""},[s("img",{src:g}),s("p",null,"空调配件")])],-1),T=t("",5),w=s("code",null,"config/configuration.yaml",-1),S=s("code",null,"input_select",-1),z=s("code",null,"media_player",-1),P=t("",11),q=s("div",{flex:"","flex-col":"","justify-center":"","text-center":""},[s("div",null,[s("img",{src:y}),s("p",null,"输入选择器实体状态")])],-1),G=t("",5),I=s("code",null,"unique_id",-1),N=s("code",null,"media_player",-1),V=s("code",null,"device_class",-1),j=s("code",null,"tv",-1),R=t("",10),O=s("blockquote",null,[s("p",null,"小贴士"),s("p",null,[i("我们在不了解实体之前，如何知道如何配置命令下面的服务呢？ 其实我们可以借助于 Home Assistant 的开发者工具，在右手边侧边栏中选择「开发者工具」-> 点选「服务」Tab，然后在「服务」下拉框中选择 "),s("code",null,"switch.turn_on"),i("，在「实体」下拉框中搜索我们想要的实体，此处我们选择 "),s("code",null,"switch.hddz_zndrt_d3d8_electric_blanket"),i("，然后点击「调用服务」。")]),s("div",{flex:"","flex-col":"","justify-center":"","text-center":""},[s("img",{src:_}),s("p",null,"通过服务直接调用 switch 类型的实体的 turn_on 服务")]),s("p",null,[i("点击调用服务之后，我们返回「状态」Tab 再次检查 "),s("code",null,"switch.hddz_zndrt_d3d8_electric_blanket"),i(" 的状态，可以看到状态已经变成了 "),s("code",null,"on"),i("，这说明我们的操作是成功的。")]),s("p",null,"如果你的智能设备需要使用别的类型的服务完成操作，也可以先通过在右手边侧边栏中选择「开发者工具」-> 点选「状态」Tab，并搜索实体的状态和附属的实体信息来决定如何调用服务。")],-1),K=t("",7),L=s("div",{class:"tip custom-block github-alert"},[s("p",{class:"custom-block-title"},"小贴士"),s("p"),s("p",null,"其实我们可以借助于 Home Assistant 的开发者工具，在右手边侧边栏中选择「开发者工具」-> 点选「模板」来对模板进行调试，这样我们就可以在 Home Assistant 中直接调试模板了。"),s("div",{flex:"","flex-col":"","justify-center":"","text-center":""},[s("img",{src:B}),s("p",null,"对模板进行预览和调试")]),s("p",null,[i("在上图中我们直接将刚刚配置的模板粘贴到了模板编辑器中，可以看到当我们传入 "),s("code",null,"source"),i(" 为 "),s("code",null,"二档"),i(" 时，模板的输出为 "),s("code",null,"Gear 2"),i("，这就是我们想要的结果。")])],-1),M=t("",6),X=s("div",{flex:"","flex-col":"","justify-center":"","text-center":""},[s("video",{controls:"",muted:""},[s("source",{src:u,type:"video/mp4"})]),s("p",null,"在 Home Assistant 中操作")],-1),J=s("div",{flex:"","flex-col":"","justify-center":"","text-center":""},[s("video",{controls:"",muted:""},[s("source",{src:A,type:"video/mp4"})]),s("p",null,"在 Homekit 中操作")],-1),$=s("h2",{id:"总结",tabindex:"-1"},[i("总结 "),s("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),Y=s("p",null,"这里只是用能接入米家的电热毯作为例子讲解了如何使用电视配件来控制电热毯，但我想这个方法应该可以用于任何能接入 Home Assistant 的设备。祝大家玩的开心！",-1),U=s("h2",{id:"参考资料",tabindex:"-1"},[i("参考资料 "),s("a",{class:"header-anchor",href:"#参考资料","aria-label":'Permalink to "参考资料"'},"​")],-1),Q=s("h2",{id:"延伸阅读",tabindex:"-1"},[i("延伸阅读 "),s("a",{class:"header-anchor",href:"#延伸阅读","aria-label":'Permalink to "延伸阅读"'},"​")],-1),W=s("hr",{class:"footnotes-sep"},null,-1),Z={class:"footnotes"},ss={class:"footnotes-list"},is={id:"fn1",class:"footnote-item"},as=s("a",{href:"#fnref1",class:"footnote-backref"},"↩︎",-1),ns={id:"fn2",class:"footnote-item"},es=s("a",{href:"#fnref2",class:"footnote-backref"},"↩︎",-1);function ts(ls,hs,ps,ks,ds,rs){const h=l("NolebasePageProperties"),n=l("VPNolebaseInlineLinkPreview"),p=l("NolebaseGitContributors"),k=l("NolebaseGitChangelog");return o(),r("div",null,[C,a(h),f,s("p",null,[i("为了解决如此使用困难的问题，我尝试在 Home Assistant 中配置了其支持的基础集成 "),a(n,{href:"https://www.home-assistant.io/integrations/input_select/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Input Select")]),_:1}),i(" ，希望能在 Homekit 中看到类似于空调运行模式和电视输入选择的模块，但事实证明，使用 Input Select 集成是无法让 Homekit 将其展示为多个模式、多个状态切换的配件的，查阅资料后才了解，Homekit 是有预先定义和限制了配件的组件和工作方式的"),E,i("，这也解释了为什么像是米家和 Aqara 的配件往往在 Homekit 中会显得简陋，而在他们自己的第三方 App 中功能就会变得繁多起来。")]),s("div",F,[b,s("p",null,[i("如果你想要了解 Homekit 所支持的配件类型，可以在 "),a(n,{href:"https://developer.apple.com/download/more/?=for%20Xcode",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("More Downloads for Apple Developers")]),_:1}),i(" 页面登录 Apple ID 后下载开头名为「Additional Tools for Xcode」的工具集"),v,i("，然后在下载获得的文件夹中找到「HomeKit Accessory Simulator」应用程序，你可以直接双击打开，也可以先拖放到 macOS 的应用程序文件夹再打开，具体的使用教程可以参考官方的文档："),a(n,{href:"https://developer.apple.com/documentation/homekit/testing_your_app_with_the_homekit_accessory_simulator",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Testing your app with the HomeKit Accessory Simulator")]),_:1}),i("。")]),H]),x,D,T,s("p",null,[i("为了能够存储和控制我们的电热毯，我们需要在 "),w,i(" 文件中添加两个根属性： "),S,i("（对应 "),a(n,{href:"https://www.home-assistant.io/integrations/input_select/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Input Select")]),_:1}),i(" 集成） 和 "),z,i("（对应 "),a(n,{href:"https://www.home-assistant.io/integrations/media_player/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Media Player")]),_:1}),i(" 集成和 "),a(n,{href:"https://www.home-assistant.io/integrations/universal/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Universal Media Player")]),_:1}),i(" 集成）：")]),P,q,G,s("p",null,[i("注意这里的 "),I,i(" 是可选的，如果你也要填写这个字段的话，需要保证在整个 Home Assistant 中的 "),N,i(" 下是唯一的。为了让 Homekit 将我们的「电视型电热毯」展示为一个正确的电视配件，我们需要将 "),a(n,{href:"https://www.home-assistant.io/integrations/universal/#device_class",target:"_blank",rel:"noreferrer"},{default:e(()=>[V]),_:1}),i(" 设置为 "),j,i("。")]),R,O,K,L,M,X,J,$,Y,U,s("p",null,[a(n,{href:"https://community.home-assistant.io/t/media-player-universal-source-in-overview/135331/3",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("如何为通用媒体播放器的信号源创建别名 - 媒体播放器信号源概述 - Home Assistant Community")]),_:1})]),Q,s("p",null,[a(n,{href:"https://jinja.palletsprojects.com/en/latest/templates/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Jinjia 模板文档 — Jinja Documentation (3.2.x)")]),_:1})]),s("p",null,[a(n,{href:"https://www.home-assistant.io/docs/configuration/templating/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("使用模版 - Home Assistant")]),_:1})]),s("p",null,[a(n,{href:"https://www.home-assistant.io/integrations/universal/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("通用媒体播放器 - Home Assistant")]),_:1})]),a(p),a(k),W,s("section",Z,[s("ol",ss,[s("li",is,[s("p",null,[i("Apple 开发者文档中提及了 Homekit 配件的两个关键类型，一个是 "),a(n,{href:"https://developer.apple.com/documentation/homekit/hmservice/accessory_service_types",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("配件服务类型（Accessory Service Types）")]),_:1}),i(" ，另一个是 "),a(n,{href:"https://developer.apple.com/documentation/homekit/hmcharacteristic/characteristic_types",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("配件特征 类型（Characteristic types）")]),_:1}),i(),as])]),s("li",ns,[s("p",null,[i("Apple 提供了 macOS 端的 HomeKit Accessory Simulator 应用程序来支持让开发者通过 macOS 模拟 Homekit 配件，教程："),a(n,{href:"https://developer.apple.com/documentation/homekit/testing_your_app_with_the_homekit_accessory_simulator",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Testing your app with the HomeKit Accessory Simulator")]),_:1}),i(),es])])])])])}const gs=d(m,[["render",ts]]);export{cs as __pageData,gs as default};
