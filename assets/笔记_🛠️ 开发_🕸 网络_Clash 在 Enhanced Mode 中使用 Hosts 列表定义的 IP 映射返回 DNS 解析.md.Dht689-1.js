import{_ as k,c as o,I as i,j as s,w as e,a as n,au as d,D as a,o as r}from"./chunks/framework.RMxno62p.js";const I=JSON.parse('{"title":"Clash 在 Enhanced Mode 中使用 Hosts 列表定义的 IP 映射返回 DNS 解析","description":"","frontmatter":{"tags":["开源/软件/Clash","计算机/网络/VPN/Clash","计算机/网络/代理/Clash","软件/ClashX","计算机/网络/路由","计算机/网络/透明代理","开源/软件/Clash/增强模式","开发/标记语言/YAML","软件/Visual-Studio-Code","软件/Visual-Studio-Code/vscode"]},"headers":[],"relativePath":"笔记/🛠️ 开发/🕸 网络/Clash 在 Enhanced Mode 中使用 Hosts 列表定义的 IP 映射返回 DNS 解析.md","filePath":"笔记/🛠️ 开发/🕸 网络/Clash 在 Enhanced Mode 中使用 Hosts 列表定义的 IP 映射返回 DNS 解析.md"}'),c={name:"笔记/🛠️ 开发/🕸 网络/Clash 在 Enhanced Mode 中使用 Hosts 列表定义的 IP 映射返回 DNS 解析.md"},g=s("h1",{id:"clash-在-enhanced-mode-中使用-hosts-列表定义的-ip-映射返回-dns-解析",tabindex:"-1"},[n("Clash 在 Enhanced Mode 中使用 Hosts 列表定义的 IP 映射返回 DNS 解析 "),s("a",{class:"header-anchor",href:"#clash-在-enhanced-mode-中使用-hosts-列表定义的-ip-映射返回-dns-解析","aria-label":'Permalink to "Clash 在 Enhanced Mode 中使用 Hosts 列表定义的 IP 映射返回 DNS 解析"'},"​")],-1),y=s("h3",{id:"文档兼容性",tabindex:"-1"},[n("文档兼容性 "),s("a",{class:"header-anchor",href:"#文档兼容性","aria-label":'Permalink to "文档兼容性"'},"​")],-1),_={tabindex:"0"},C=s("thead",null,[s("tr",null,[s("th",null,"主体"),s("th",null,"版本号"),s("th",null,"文档地址（如果有）")])],-1),E=s("td",null,"ClashX Pro",-1),f=s("td",null,"Version: 1.117.1.1 (1.117.1.1) Beta",-1),B=d(`<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>你可能会遇到需要在没有前置透明代理和前置 DNS 服务器的情况下通过手动配置比如 <code>/etc/hosts</code> 文件来映射域名到目标地址来开发或者访问临时 IP 下的服务的需求，这个时候我们往往需要同时打开 Clash 并且配置代理甚至是增强模式，而在增强模式的情况下，Clash 会接管我们的 DNS 请求（参见 fake-ip 模式），这个时候如果我们采用默认配置的话，那么将无法通过 <code>curl</code> ，浏览器，甚至是开发中的应用程序和 debugger 访问到我们希望访问的服务了，这个时候可以通过配置 Clash 来解决这个问题。</p><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><p>我这里使用的是 <code>ClashX Pro</code>，可以通过 <code>ClashX Pro</code> 的菜单栏中的「配置」-「打开配置文件夹」来查看到配置文件列表，在列表中会存在一个 <code>config.yaml</code> 文件，这个时候我们可以通过在自己偏好的文件编辑器中打开该文件来进行编辑，补充我们需要的配置选项来支持 Hosts 定义 IP 的需求。此处我使用 <code>code</code>（Visutal Studio Code 的命令行指令）打开：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">code</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;/Users/neko/.config/clash/config.yaml&#39;</span></span></code></pre></div><p>我们需要在配置文件中添加下面的行就可以解决：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#---------------------------------------------------#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## 配置文件需要放置在 $HOME/.config/clash/*.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## 这份文件是clashX的基础配置文件，请尽量新建配置文件进行修改。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## ！！！只有这份文件的端口设置会随ClashX启动生效</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## 如果您不知道如何操作，请参阅 官方Github文档 https://github.com/Dreamacro/clash/blob/dev/README.md</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#---------------------------------------------------#</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># (HTTP and SOCKS5 in one port)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">mixed-port</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7890</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># RESTful API for clash</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">external-controller</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">127.0.0.1:9090</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">allow-lan</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">mode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rule</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">log-level</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">warning</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">proxies</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">proxy-groups</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dns</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  use-hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span></span>
<span class="line"></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line diff add"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # --- 项目域名 ----</span></span>
<span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &#39;service.test.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;127.0.0.1&#39;</span></span>
<span class="line diff add"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # ----------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">rules</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">DOMAIN-SUFFIX,google.com,DIRECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">DOMAIN-KEYWORD,google,DIRECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">DOMAIN,google.com,DIRECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">DOMAIN-SUFFIX,ad.com,REJECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">GEOIP,CN,DIRECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">MATCH,DIRECT</span></span></code></pre></div><h2 id="延伸阅读" tabindex="-1">延伸阅读 <a class="header-anchor" href="#延伸阅读" aria-label="Permalink to &quot;延伸阅读&quot;">​</a></h2>`,8);function u(A,F,m,b,D,P){const t=a("NolebasePageProperties"),l=a("VPNolebaseInlineLinkPreview"),h=a("NolebaseGitContributors"),p=a("NolebaseGitChangelog");return r(),o("div",null,[g,i(t),y,s("table",_,[C,s("tbody",null,[s("tr",null,[E,f,s("td",null,[i(l,{href:"https://install.appcenter.ms/users/clashx/apps/clashx-pro/distribution_groups/public",target:"_blank",rel:"noreferrer"},{default:e(()=>[n("App Center")]),_:1})])])])]),B,s("p",null,[i(l,{href:"https://www.v2ex.com/t/865599",target:"_blank",rel:"noreferrer"},{default:e(()=>[n("clash for windows 的 rule 模式没法连接公司内网怎么破 - V2EX")]),_:1})]),i(h),i(p)])}const S=k(c,[["render",u]]);export{I as __pageData,S as default};
