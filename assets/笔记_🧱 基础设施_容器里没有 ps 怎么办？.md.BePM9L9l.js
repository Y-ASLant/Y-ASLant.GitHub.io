import{_ as d,c as h,I as t,j as s,a as e,w as n,au as i,D as o,o as p}from"./chunks/framework.RMxno62p.js";const O=JSON.parse('{"title":"容器里没有 ps 怎么办？","description":"","frontmatter":{"tags":["开发/容器化","命令行/docker","运维/云原生/Docker","开发/容器化/Docker/Dockerfile","命令行/aws","基础设施/云服务商/亚马逊云/AWS","基础设施/应用容器/亚马逊云/AWS/ElaticContainerService/ECS","命令行/ps","操作系统/Debian","计算机/操作系统/Linux/内核/procfs"]},"headers":[],"relativePath":"笔记/🧱 基础设施/容器里没有 ps 怎么办？.md","filePath":"笔记/🧱 基础设施/容器里没有 ps 怎么办？.md"}'),_={name:"笔记/🧱 基础设施/容器里没有 ps 怎么办？.md"},k=s("h1",{id:"容器里没有-ps-怎么办",tabindex:"-1"},[e("容器里没有 "),s("code",null,"ps"),e(" 怎么办？ "),s("a",{class:"header-anchor",href:"#容器里没有-ps-怎么办","aria-label":'Permalink to "容器里没有 `ps` 怎么办？"'},"​")],-1),u=s("p",null,[e("今天去基于 "),s("code",null,"node:20-slim"),e(" 的容器里排查问题的时候发现容器里连 "),s("code",null,"ps"),e(" 都没有，想要观察当前运行的进程的时候会变的困难。")],-1),f=s("p",null,[e("因为容器是部署在 AWS ECS 上的，没有办法像 Kubernetes 的 "),s("code",null,"kubectl debug"),e(" 那样可以简单轻松地复制出来一个共享的 sidecar 容器，所以我们只能硬着头皮解决一下这个问题了。")],-1),g=s("code",null,"Dockerfile",-1),b=s("code",null,"node:20-slim",-1),m=s("code",null,"debian:bookworm-slim",-1),E=s("code",null,"apt",-1),C=s("code",null,"apt",-1),A=s("code",null,"procps",-1),B=s("code",null,"ps",-1),F=i('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> procps</span></span></code></pre></div>',1),D=s("code",null,"apt",-1),v=i('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> R</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /proc/[0-9]</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/stat</span></span></code></pre></div>',1),w=s("h2",{id:"参考资料",tabindex:"-1"},[e("参考资料 "),s("a",{class:"header-anchor",href:"#参考资料","aria-label":'Permalink to "参考资料"'},"​")],-1),y=s("h2",{id:"延伸阅读",tabindex:"-1"},[e("延伸阅读 "),s("a",{class:"header-anchor",href:"#延伸阅读","aria-label":'Permalink to "延伸阅读"'},"​")],-1),S=s("code",null,"FROM scratch",-1);function x(P,N,T,V,j,I){const l=o("NolebasePageProperties"),a=o("VPNolebaseInlineLinkPreview"),r=o("NolebaseGitContributors"),c=o("NolebaseGitChangelog");return p(),h("div",null,[k,t(l),u,f,s("p",null,[e("不过好在如果我们直接观察 "),t(a,{href:"https://github.com/nodejs/docker-node/blob/375d663fe34b3e76ee41bff8bcac583da32fe0cb/20/bookworm-slim/Dockerfile",target:"_blank",rel:"noreferrer"},{default:n(()=>[g]),_:1}),e(" 的话（如果需要看别的 Dockerfile 可以在 "),t(a,{href:"https://hub.docker.com/_/node",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("node - Official Image | Docker Hub")]),_:1}),e(" 里点击其他的 Tag 然后 inspect），可以发现 "),b,e(" 是基于 "),m,e(" 构建的，这意味着我们起码能有 "),E,e(" 可以用。")]),s("p",null,[e("所以我们可以用 "),C,e(" 安装 "),t(a,{href:"https://packages.debian.org/sid/procps",target:"_blank",rel:"noreferrer"},{default:n(()=>[A]),_:1}),e(" 补全 "),B,e(" 缺失的问题：")]),F,s("p",null,[e("当然如果连 "),D,e(" 都没有的话... 也许可以试试看 "),t(a,{href:"https://unix.stackexchange.com/a/542202",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("ps - Command to display only running processes in Linux - Unix & Linux Stack Exchange")]),_:1}),e(" 介绍的：")]),v,s("p",null,[e("或者参考一下 "),t(a,{href:"https://stackoverflow.com/a/29992237/19954520",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("c - Programmatically read all the processes status from /proc - Stack Overflow")]),_:1})]),w,s("ul",null,[s("li",null,[t(a,{href:"https://stackoverflow.com/questions/26982274/ps-command-doesnt-work-in-docker-container",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("debian - ps command doesn't work in docker container - Stack Overflow")]),_:1})])]),y,s("ul",null,[s("li",null,[t(a,{href:"https://stackoverflow.com/questions/71422772/what-is-the-difference-between-node-images-for-docker-and-when-to-use-which",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("node.js - What is the difference between node images for Docker and when to use which? - Stack Overflow")]),_:1})]),s("li",null,[t(a,{href:"https://larry850806.medium.com/%E5%97%AF%E5%97%AF%E5%B0%8D-%E7%94%A8-slim-%E6%88%96%E6%98%AF-alpine-%E7%A2%BA%E5%AF%A6%E5%8F%AF%E4%BB%A5%E7%9C%81%E4%B8%8B%E5%BE%88%E5%A4%9A%E7%A9%BA%E9%96%93-%E4%BD%86%E5%90%8C%E6%99%82%E4%BB%96%E5%80%91%E4%B9%9F%E5%B0%91%E8%A3%9D%E4%BA%86%E5%BE%88%E5%A4%9A%E6%9D%B1%E8%A5%BF-%E5%8F%AF%E8%83%BD%E6%9C%83%E5%B0%8E%E8%87%B4%E4%B8%80%E4%BA%9B%E5%95%8F%E9%A1%8C-93c4cfa7b024",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("嗯嗯對，用 slim 或是 alpine 確實可以省下很多空間，但同時他們也少裝了很多東西，可能會導致一些問題 完整的 node image 是建立在 buildpack-deps:jessie 上，而 slim 版本是建立在 buildpack-deps:jessie-curl 上，後者比前者少裝了很多東西像是 g++、gcc、python 等等，這會導致 node:slim 沒辦法編譯… - Larry Lu - Medium")]),_:1})]),s("li",null,[t(a,{href:"https://gist.github.com/DavidJFelix/1fff395f478fdcb36cb7780dc0c6ad7d",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("Debug Scratch Docker Containers")]),_:1})]),s("li",null,[t(a,{href:"https://github.com/hightouchio/injecto",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("hightouchio/injecto: Debug "),S,e(" containers by injecting contents of another image")]),_:1})]),s("li",null,[t(a,{href:"https://ahmet.im/blog/debugging-scratch/",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("Debugging “FROM scratch” on Kubernetes")]),_:1})])]),t(r),t(c)])}const R=d(_,[["render",x]]);export{O as __pageData,R as default};
