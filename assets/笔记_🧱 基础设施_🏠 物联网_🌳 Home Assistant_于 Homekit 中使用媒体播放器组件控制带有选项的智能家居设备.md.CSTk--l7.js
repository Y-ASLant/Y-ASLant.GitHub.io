import{_ as d,c as r,I as a,j as s,a as i,w as e,au as t,D as l,o}from"./chunks/framework.RMxno62p.js";const c="/assets/homekit-use-media-player-as-a-controller-homekit-screenshot-01.BtlrTQSV.jpg",g="/assets/homekit-use-media-player-as-a-controller-homekit-screenshot-02.Dyk7KMdv.jpg",y="/assets/homekit-use-media-player-as-a-controller-hass-screenshot-01.DNMKD5sk.png",_="/assets/homekit-use-media-player-as-a-controller-hass-screenshot-02.B8NSYhsG.png",B="/assets/homekit-use-media-player-as-a-controller-hass-screenshot-03.X1WkgU7T.png",u="/assets/homekit-use-media-player-as-a-controller-record-01.DoCcuDfy.mov",A="/assets/homekit-use-media-player-as-a-controller-record-02.BfRd3Jde.mov",cs=JSON.parse('{"title":"于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备","description":"","frontmatter":{"tags":["开发/标记语言/YAML","开源/软件/Home-Assistant","开源/软件/Home-Assistant/HASS","软件/iOS/Homekit","软件/macOS/Homekit","软件/iPadOS/Homekit","开发/Xcode/Additional-Tools-for-Xcode","开发/Xcode","开源/软件/Home-Assistant/模式选择器","开源/软件/Home-Assistant/空调控制器","开源/软件/Home-Assistant/媒体选择器","物联网/智能家居","物联网/智能家居/Home-Assistant","物联网/智能家居/Home-Assistant/HASS","物联网/智能家居/Homekit","运维/物联网","操作系统/iOS","操作系统/iPadOS"]},"headers":[],"relativePath":"笔记/🧱 基础设施/🏠 物联网/🌳 Home Assistant/于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备.md","filePath":"笔记/🧱 基础设施/🏠 物联网/🌳 Home Assistant/于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备.md"}'),m={name:"笔记/🧱 基础设施/🏠 物联网/🌳 Home Assistant/于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备.md"},C=s("h1",{id:"于-homekit-中使用媒体播放器组件控制带有选项的智能家居设备",tabindex:"-1"},[i("于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备 "),s("a",{class:"header-anchor",href:"#于-homekit-中使用媒体播放器组件控制带有选项的智能家居设备","aria-label":'Permalink to "于 Homekit 中使用媒体播放器组件控制带有选项的智能家居设备"'},"​")],-1),f=t(`<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><h3 id="问题根源" tabindex="-1">问题根源 <a class="header-anchor" href="#问题根源" aria-label="Permalink to &quot;问题根源&quot;">​</a></h3><p>在使用 Home Assistant 将一些其他厂商提供的智能家居设备接入到 Home Assistant 并输出到 Homekit 作为一个配件时，往往会遭遇 Home Assistant 将带有多个选项的智能家居配件转换为在 Homekit 中的多个开关组合的配件，导致其使用起来非常不直观且困难，又因为开关组在 Homekit 中没有 <strong>同一时刻有且仅有一个项目</strong> 激活的限制，经常会出现点选了其他的开关来对配件进行模式和状态切换的时候会出现两个开关在某一个短时时间段内都会处于开启的状态，过一段时间之后才会将原先的开关状态关闭的问题。</p><h3 id="当前困境" tabindex="-1">当前困境 <a class="header-anchor" href="#当前困境" aria-label="Permalink to &quot;当前困境&quot;">​</a></h3><p>我们在入秋的时候购买了一个支持接入米家的电热毯，电热毯本身是支持多个档位的选择、甚至是运行模式的选择的，而如果我们直接接入到 Home Assistant 中再转发到 Homekit 的话就会发现它被转换成了多个开关，而且名字也都是晦涩难懂的 Gear 1、Gear 2、Gear 3 之类的，这并不利于我们的使用，我期望找到一个解决办法，可以让电热毯在 Homekit 中也拥有「选择器」的功能。</p><h2 id="tl-dr" tabindex="-1">TL;DR <a class="header-anchor" href="#tl-dr" aria-label="Permalink to &quot;TL;DR&quot;">​</a></h2><p>用 <code>input_select</code> 和 <code>media_player</code> 组件来实现。</p><details class="details custom-block"><summary>展开以查看 config/configuration.yaml 是如何配置的</summary><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">input_select</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  electric_blanket_heat_level</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;电热毯温度档位&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    options</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;1 档&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;2 档&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;3 档&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    icon</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;mdi:application&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">media_player</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">platform</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">universal</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    unique_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;ihome_cat_electric_blanket&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;电热毯&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    device_class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">tv</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.hddz_zndrt_d3d8_electric_blanket</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      source</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.hddz_zndrt_d3d8_heat_level</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      source_list</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">input_select.electric_blanket_heat_level|options</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    commands</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      turn_on</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.turn_on</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          entity_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.hddz_zndrt_d3d8_electric_blanket</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      turn_off</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.turn_off</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          entity_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.hddz_zndrt_d3d8_electric_blanket</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      select_source</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.select_option</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          option</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            {% set source_map = {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;1 档&#39;: &#39;Gear 1&#39;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;2 档&#39;: &#39;Gear 2&#39;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;3 档&#39;: &#39;Gear 3&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            } %}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            {{ source_map[source] if source in source_map else &#39;Gear 1&#39; }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          entity_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.hddz_zndrt_d3d8_heat_level</span></span></code></pre></div></details><h2 id="开始动手吧" tabindex="-1">开始动手吧 <a class="header-anchor" href="#开始动手吧" aria-label="Permalink to &quot;开始动手吧&quot;">​</a></h2><h3 id="探索可能的替代配件" tabindex="-1">探索可能的替代配件 <a class="header-anchor" href="#探索可能的替代配件" aria-label="Permalink to &quot;探索可能的替代配件&quot;">​</a></h3>`,10),E=s("sup",{class:"footnote-ref"},[s("a",{href:"#fn1",id:"fnref1"},"[1]")],-1),F={class:"tip custom-block github-alert"},b=s("p",{class:"custom-block-title"},"小贴士",-1),v=s("sup",{class:"footnote-ref"},[s("a",{href:"#fn2",id:"fnref2"},"[2]")],-1),H=s("p",null,[s("strong",null,"注意：TV（电视或智能电视）类型的配件是无法通过 Homekit Accessory Simulator 进行模拟的（我此时无法找到相关的开发工具，也许是需要单独的应用程序支持才能进行模拟）。")],-1),x=s("p",null,[i("那我们换一条路，也许你知道，在众多配件与 Homekit 所兼容的配件中，"),s("strong",null,"电视"),i(" （通常是智能电视，比如 LG 和 Sony 的电视）和 "),s("strong",null,"空调控制器"),i(" （通常在中国大陆是作为 "),s("strong",null,"空调伴侣"),i(" 的形式出现）是最明显的能支持模式选择器的两个设备（我通过 HomeKit Accessory Simulator 没有找到更接近或者更类似的设备，如果大家阅读本文之后有尝试找到更适合的 Homekit 配件的话也可以在本知识库的 GitHub 仓库提交 Issue 告知）。")],-1),D=s("div",{flex:"","justify-center":"","text-center":"","space-x-4":""},[s("div",{"flex-1":""},[s("img",{src:c}),s("p",null,"电视配件")]),s("div",{"flex-1":""},[s("img",{src:g}),s("p",null,"空调配件")])],-1),T=t(`<p>在上面的两个图中，电视可以通过「信号源选择器」来选择信号源，而空调可以通过「空调模式选择器」来选择空调运行的模式。一目了然的是空调组件会多出一个超大的「目标温度」和「温度选择滑块」，这对于电热毯而言显得有些多余，毕竟电热毯是不会有 <strong>目标温度</strong> 这个概念的，而且电热毯的温度是通过档位来调节的，而不是通过温度来调节的，因此我们得出结论：我们需要将电热毯作为一个带有 <strong>信号源选择器</strong> 的电视来进行模拟。</p><h3 id="在-home-assistant-中编辑配置文件" tabindex="-1">在 Home Assistant 中编辑配置文件 <a class="header-anchor" href="#在-home-assistant-中编辑配置文件" aria-label="Permalink to &quot;在 Home Assistant 中编辑配置文件&quot;">​</a></h3><p>Home Assistant 的配置文件分类和整理是另一个更大的话题，本文中我们将专注于编辑和修改 Home Assistant 的默认根配置文件 <code>config/configuration.yaml</code>。</p><p>通常而言，默认的配置文件将会是类似下面的样子：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Configure a default setup of Home Assistant (frontend, api, etc)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">default_config</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">!include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> groups.yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">automation</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">!include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> automations.yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">!include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> scripts.yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">scene</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">!include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> scenes.yaml</span></span></code></pre></div>`,5),w=s("code",null,"config/configuration.yaml",-1),S=s("code",null,"input_select",-1),z=s("code",null,"media_player",-1),P=t(`<div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Configure a default setup of Home Assistant (frontend, api, etc)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">default_config</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">!include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> groups.yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">automation</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">!include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> automations.yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">!include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> scripts.yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">scene</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">!include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> scenes.yaml</span></span>
<span class="line"></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">input_select</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">media_player</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span></code></pre></div><h4 id="编辑-input-select-配置" tabindex="-1">编辑 <code>input_select</code> 配置 <a class="header-anchor" href="#编辑-input-select-配置" aria-label="Permalink to &quot;编辑 \`input_select\` 配置&quot;">​</a></h4><p>接下来我们需要在 <code>input_select</code> 中添加一个 <code>electric_blanket_heat_level</code> 的输入选择器，用来存储电热毯可选的温度档位：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">input_select</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  electric_blanket_heat_level</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;电热毯温度档位&#39;</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    options</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;1 档&#39;</span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;2 档&#39;</span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;3 档&#39;</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    icon</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;mdi:application&#39;</span></span></code></pre></div><h5 id="配置说明" tabindex="-1">配置说明 <a class="header-anchor" href="#配置说明" aria-label="Permalink to &quot;配置说明&quot;">​</a></h5><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-focused-lines vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">input_select</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  electric_blanket_heat_level</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;电热毯温度档位&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    options</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;1 档&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;2 档&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;3 档&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    icon</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;mdi:application&#39;</span></span></code></pre></div><p><code>electric_blanket_heat_level</code> 是我们自定义的输入选择器的实体 ID（在 Home Assistant 中为 <code>entity_id</code>），这个字段值可以随意定义，但是需要保证在整个 Home Assistant 中的 <code>input_select</code> 下是唯一的。稍后我们可以通过 <code>input_select.electric_blanket_heat_level</code> 来引用这个输入选择器。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-focused-lines vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">input_select</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  electric_blanket_heat_level</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;电热毯温度档位&#39;</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    options</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;1 档&#39;</span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;2 档&#39;</span></span>
<span class="line has-focus"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;3 档&#39;</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    icon</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;mdi:application&#39;</span></span></code></pre></div><p><code>name</code> 是输入选择器的名称，<code>options</code> 是输入选择器的选项，<code>icon</code> 是输入选择器的图标。</p><p>现在我们将配置文件保存，在右手边侧边栏中选择「开发者工具」-&gt; 点选「YAML 配置」Tab -&gt; 在下方「配置检查与重启」一栏中点击「检查配置」，如果 Home Assistant 提示「配置不会阻止 Home Assistant 启动！」，则说明配置文件没有问题，可以点击「重启启动」按钮重启 Home Assistant。</p><p>等待重启后我们就能通过右手边侧边栏中选择「开发者工具」-&gt; 点选「状态」Tab -&gt; 在下方「实体」 -&gt; 「输入筛选实体」一栏中输入 <code>input_select.electric_blanket_heat_level</code> 来查看我们刚刚添加的输入选择器。应当能看到如下图一样的界面：</p>`,11),q=s("div",{flex:"","flex-col":"","justify-center":"","text-center":""},[s("div",null,[s("img",{src:y}),s("p",null,"输入选择器实体状态")])],-1),G=t(`<h4 id="编辑-media-player-配置" tabindex="-1">编辑 <code>media_player</code> 配置 <a class="header-anchor" href="#编辑-media-player-配置" aria-label="Permalink to &quot;编辑 \`media_player\` 配置&quot;">​</a></h4><h5 id="配置基础信息" tabindex="-1">配置基础信息 <a class="header-anchor" href="#配置基础信息" aria-label="Permalink to &quot;配置基础信息&quot;">​</a></h5><p>接下来我们需要在 <code>media_player</code> 中添加一个 <code>platform</code> 为 <code>universal</code> 的媒体播放器，用来控制电热毯：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">media_player</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">platform</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">universal</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    unique_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;ihome_cat_electric_blanket&#39;</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;电热毯&#39;</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    device_class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">tv</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-focused-lines vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">media_player</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">platform</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">universal</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    unique_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;ihome_cat_electric_blanket&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;电热毯&#39;</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    device_class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">tv</span></span></code></pre></div>`,5),I=s("code",null,"unique_id",-1),N=s("code",null,"media_player",-1),V=s("code",null,"device_class",-1),j=s("code",null,"tv",-1),R=t(`<h5 id="配置-attributes" tabindex="-1">配置 <code>attributes</code> <a class="header-anchor" href="#配置-attributes" aria-label="Permalink to &quot;配置 \`attributes\`&quot;">​</a></h5><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">media_player</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">platform</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">universal</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    unique_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;ihome_cat_electric_blanket&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;电热毯&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    device_class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">tv</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.hddz_zndrt_d3d8_electric_blanket</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      source</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.hddz_zndrt_d3d8_heat_level</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      source_list</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">input_select.electric_blanket_heat_level|options</span></span></code></pre></div><p>我们添加了 <code>attributes</code> 和其附属的属性字段。这里的 <code>attributes</code> 是一个字典。</p><ol><li><code>state</code> 对应的是开关状态，当我们在媒体播放器中选择开关打开的时候，<code>state</code> 的值就会变成 <code>on</code>，反之，<code>state</code> 的值就会变成 <code>off</code>。</li><li><code>source</code> 对应的是当前选中的信号源，当我们在媒体播放器中选择信号源 1 的时候，<code>source</code> 的值就会变成 <code>1</code>。</li><li><code>source_list</code> 对应的是信号源列表，是一个数组</li></ol><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-focused-lines vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">media_player</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">platform</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">universal</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    unique_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;ihome_cat_electric_blanket&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;电热毯&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    device_class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">tv</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.hddz_zndrt_d3d8_electric_blanket</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      source</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.hddz_zndrt_d3d8_heat_level</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      source_list</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">input_select.electric_blanket_heat_level|options</span></span></code></pre></div><p>注意这里的 <code>attributes</code> 的 <code>source_list</code> 是 <code>input_select.electric_blanket_heat_level|options</code> 作为字段值，别把 <code>|options</code> 漏掉了，这是 Home Assistant 的模板语法，用来获取 <code>input_select</code> 实体的选项列表。</p><h5 id="配置-commands" tabindex="-1">配置 <code>commands</code> <a class="header-anchor" href="#配置-commands" aria-label="Permalink to &quot;配置 \`commands\`&quot;">​</a></h5><p>有了基础的状态，我们现在可以开始配置能操作 <code>media_player</code> 的命令（<code>commands</code>）了。这些命令将在我们通过 Home Assistant 或者是 Homekit 来操作「电视型电热毯」的时候被调用。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">media_player</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">platform</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">universal</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    unique_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;ihome_cat_electric_blanket&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;电热毯&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    device_class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">tv</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.hddz_zndrt_d3d8_electric_blanket</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      source</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.hddz_zndrt_d3d8_heat_level</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      source_list</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">input_select.electric_blanket_heat_level|options</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    commands</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      turn_on</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.turn_on</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {}  </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          entity_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.hddz_zndrt_d3d8_electric_blanket</span></span>
<span class="line"></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      turn_off</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.turn_off</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {}  </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          entity_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.hddz_zndrt_d3d8_electric_blanket</span></span>
<span class="line"></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      select_source</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.select_option</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          option</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&gt;</span></span>
<span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            {% set source_map = {</span></span>
<span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;1 档&#39;: &#39;Gear 1&#39;,</span></span>
<span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;2 档&#39;: &#39;Gear 2&#39;,</span></span>
<span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;3 档&#39;: &#39;Gear 3&#39;</span></span>
<span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            } %}</span></span>
<span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            {{ source_map[source] if source in source_map else &#39;Gear 1&#39; }}</span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line diff add"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          entity_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.hddz_zndrt_d3d8_heat_level</span></span></code></pre></div><p>现在 <code>commands</code> 下新增了 <code>turn_on</code>、<code>turn_off</code> 和 <code>select_source</code> 三个命令，分别对应了开关电热毯的开和关的操作以及选择信号源的操作。</p>`,10),O=s("blockquote",null,[s("p",null,"小贴士"),s("p",null,[i("我们在不了解实体之前，如何知道如何配置命令下面的服务呢？ 其实我们可以借助于 Home Assistant 的开发者工具，在右手边侧边栏中选择「开发者工具」-> 点选「服务」Tab，然后在「服务」下拉框中选择 "),s("code",null,"switch.turn_on"),i("，在「实体」下拉框中搜索我们想要的实体，此处我们选择 "),s("code",null,"switch.hddz_zndrt_d3d8_electric_blanket"),i("，然后点击「调用服务」。")]),s("div",{flex:"","flex-col":"","justify-center":"","text-center":""},[s("img",{src:_}),s("p",null,"通过服务直接调用 switch 类型的实体的 turn_on 服务")]),s("p",null,[i("点击调用服务之后，我们返回「状态」Tab 再次检查 "),s("code",null,"switch.hddz_zndrt_d3d8_electric_blanket"),i(" 的状态，可以看到状态已经变成了 "),s("code",null,"on"),i("，这说明我们的操作是成功的。")]),s("p",null,"如果你的智能设备需要使用别的类型的服务完成操作，也可以先通过在右手边侧边栏中选择「开发者工具」-> 点选「状态」Tab，并搜索实体的状态和附属的实体信息来决定如何调用服务。")],-1),K=t(`<div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-focused-lines vp-code" tabindex="0"><code><span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    commands</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      turn_on</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.turn_on</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {} </span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          entity_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.hddz_zndrt_d3d8_electric_blanket</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      turn_off</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.turn_off</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {} </span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          entity_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">switch.hddz_zndrt_d3d8_electric_blanket</span></span></code></pre></div><p>开和关这两个命令的 <code>service</code> 都是 <code>switch.turn_on</code> 和 <code>switch.turn_off</code>，<code>target</code> 都是 <code>switch.hddz_zndrt_d3d8_electric_blanket</code>，由于是 <code>switch</code> 类型的实体，不需要 <code>data</code> 字段，所以此处 <code>data</code> 留空就好。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-focused-lines vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      select_source</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.select_option</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          option</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            {% set source_map = {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;1 档&#39;: &#39;Gear 1&#39;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;2 档&#39;: &#39;Gear 2&#39;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;3 档&#39;: &#39;Gear 3&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            } %}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            {{ source_map[source] if source in source_map else &#39;Gear 1&#39; }}</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          entity_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.hddz_zndrt_d3d8_heat_level</span></span></code></pre></div><p>最后一个属性！<code>select_source</code> 将会在我们选择该媒体播放器的信号源（信号源）时被调用，在这份例子中，我们为电热毯选择档位时，<code>select_source</code> 就会被调用。此处由于我们需要操作的目标对象（即最下方的 <code>target.entity_id</code> 指向的电热毯温度档位实体 <code>select.hddz_zndrt_d3d8_heat_level</code> 是一个 <code>select</code> 实体，所以我们需要调用 <code>select.*</code> 相关的服务），所以 <code>service</code> 为 <code>select.select_option</code>。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro has-focused-lines vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      select_source</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.select_option</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          option</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&gt;</span></span>
<span class="line has-focus"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            {% set source_map = {</span></span>
<span class="line has-focus"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;1 档&#39;: &#39;Gear 1&#39;,</span></span>
<span class="line has-focus"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;2 档&#39;: &#39;Gear 2&#39;,</span></span>
<span class="line has-focus"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &#39;3 档&#39;: &#39;Gear 3&#39;</span></span>
<span class="line has-focus"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            } %}</span></span>
<span class="line has-focus"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">            {{ source_map[source] if source in source_map else &#39;Gear 1&#39; }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">          entity_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">select.hddz_zndrt_d3d8_heat_level</span></span></code></pre></div><p>接下来是 <code>data</code> 字段，<code>data</code> 字段是一个对象，用于包含我们需要传递给服务的数据。</p><p>为了方便我们在 Homekit 和 Home Assistant 中使用方便，此处我们还使用了 Home Assistant 的模板功能将我们在 <code>input_select</code> 中配置的选项映射为 <code>select</code> 实体的选项。</p>`,7),L=s("div",{class:"tip custom-block github-alert"},[s("p",{class:"custom-block-title"},"小贴士"),s("p"),s("p",null,"其实我们可以借助于 Home Assistant 的开发者工具，在右手边侧边栏中选择「开发者工具」-> 点选「模板」来对模板进行调试，这样我们就可以在 Home Assistant 中直接调试模板了。"),s("div",{flex:"","flex-col":"","justify-center":"","text-center":""},[s("img",{src:B}),s("p",null,"对模板进行预览和调试")]),s("p",null,[i("在上图中我们直接将刚刚配置的模板粘贴到了模板编辑器中，可以看到当我们传入 "),s("code",null,"source"),i(" 为 "),s("code",null,"二档"),i(" 时，模板的输出为 "),s("code",null,"Gear 2"),i("，这就是我们想要的结果。")])],-1),M=t('<p>我们通过模板语法定义了一个名为 <code>source_map</code> 的变量，里面存储一个字典，字典中将会把我们的中文档位选项映射到 <code>Gear 1</code>, <code>Gear 2</code>, <code>Gear 3</code> 上。这个 <code>Gear 1</code> 的值是通过在右手边侧边栏中选择「开发者工具」-&gt; 点选「状态」Tab，搜索 <code>select.hddz_zndrt_d3d8_heat_level</code> 了解到的，这个实体中包含了 <code>Gear 1</code>, <code>Gear 2</code>, <code>Gear 3</code> 三个档位的选项值，所以我们映射的目标也就是这三个值。</p><p>在模板的最后一行中我们通过</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{{ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">source_map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">if source in source_map else &#39;Gear 1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> }}</span></span></code></pre></div><p>将选中的 <code>source</code> 的值通过 <code>source_map</code> 进行映射并输出映射到的值，如果 <code>source</code> 的值不在 <code>source_map</code> 中，那么就使用 <code>Gear 1</code> 作为默认值。</p><p>到这里就大功告成啦！</p><h3 id="最终效果" tabindex="-1">最终效果 <a class="header-anchor" href="#最终效果" aria-label="Permalink to &quot;最终效果&quot;">​</a></h3>',6),X=s("div",{flex:"","flex-col":"","justify-center":"","text-center":""},[s("video",{controls:"",muted:""},[s("source",{src:u,type:"video/mp4"})]),s("p",null,"在 Home Assistant 中操作")],-1),J=s("div",{flex:"","flex-col":"","justify-center":"","text-center":""},[s("video",{controls:"",muted:""},[s("source",{src:A,type:"video/mp4"})]),s("p",null,"在 Homekit 中操作")],-1),$=s("h2",{id:"总结",tabindex:"-1"},[i("总结 "),s("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),Y=s("p",null,"这里只是用能接入米家的电热毯作为例子讲解了如何使用电视配件来控制电热毯，但我想这个方法应该可以用于任何能接入 Home Assistant 的设备。祝大家玩的开心！",-1),U=s("h2",{id:"参考资料",tabindex:"-1"},[i("参考资料 "),s("a",{class:"header-anchor",href:"#参考资料","aria-label":'Permalink to "参考资料"'},"​")],-1),Q=s("h2",{id:"延伸阅读",tabindex:"-1"},[i("延伸阅读 "),s("a",{class:"header-anchor",href:"#延伸阅读","aria-label":'Permalink to "延伸阅读"'},"​")],-1),W=s("hr",{class:"footnotes-sep"},null,-1),Z={class:"footnotes"},ss={class:"footnotes-list"},is={id:"fn1",class:"footnote-item"},as=s("a",{href:"#fnref1",class:"footnote-backref"},"↩︎",-1),ns={id:"fn2",class:"footnote-item"},es=s("a",{href:"#fnref2",class:"footnote-backref"},"↩︎",-1);function ts(ls,hs,ps,ks,ds,rs){const h=l("NolebasePageProperties"),n=l("VPNolebaseInlineLinkPreview"),p=l("NolebaseGitContributors"),k=l("NolebaseGitChangelog");return o(),r("div",null,[C,a(h),f,s("p",null,[i("为了解决如此使用困难的问题，我尝试在 Home Assistant 中配置了其支持的基础集成 "),a(n,{href:"https://www.home-assistant.io/integrations/input_select/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Input Select")]),_:1}),i(" ，希望能在 Homekit 中看到类似于空调运行模式和电视输入选择的模块，但事实证明，使用 Input Select 集成是无法让 Homekit 将其展示为多个模式、多个状态切换的配件的，查阅资料后才了解，Homekit 是有预先定义和限制了配件的组件和工作方式的"),E,i("，这也解释了为什么像是米家和 Aqara 的配件往往在 Homekit 中会显得简陋，而在他们自己的第三方 App 中功能就会变得繁多起来。")]),s("div",F,[b,s("p",null,[i("如果你想要了解 Homekit 所支持的配件类型，可以在 "),a(n,{href:"https://developer.apple.com/download/more/?=for%20Xcode",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("More Downloads for Apple Developers")]),_:1}),i(" 页面登录 Apple ID 后下载开头名为「Additional Tools for Xcode」的工具集"),v,i("，然后在下载获得的文件夹中找到「HomeKit Accessory Simulator」应用程序，你可以直接双击打开，也可以先拖放到 macOS 的应用程序文件夹再打开，具体的使用教程可以参考官方的文档："),a(n,{href:"https://developer.apple.com/documentation/homekit/testing_your_app_with_the_homekit_accessory_simulator",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Testing your app with the HomeKit Accessory Simulator")]),_:1}),i("。")]),H]),x,D,T,s("p",null,[i("为了能够存储和控制我们的电热毯，我们需要在 "),w,i(" 文件中添加两个根属性： "),S,i("（对应 "),a(n,{href:"https://www.home-assistant.io/integrations/input_select/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Input Select")]),_:1}),i(" 集成） 和 "),z,i("（对应 "),a(n,{href:"https://www.home-assistant.io/integrations/media_player/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Media Player")]),_:1}),i(" 集成和 "),a(n,{href:"https://www.home-assistant.io/integrations/universal/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Universal Media Player")]),_:1}),i(" 集成）：")]),P,q,G,s("p",null,[i("注意这里的 "),I,i(" 是可选的，如果你也要填写这个字段的话，需要保证在整个 Home Assistant 中的 "),N,i(" 下是唯一的。为了让 Homekit 将我们的「电视型电热毯」展示为一个正确的电视配件，我们需要将 "),a(n,{href:"https://www.home-assistant.io/integrations/universal/#device_class",target:"_blank",rel:"noreferrer"},{default:e(()=>[V]),_:1}),i(" 设置为 "),j,i("。")]),R,O,K,L,M,X,J,$,Y,U,s("p",null,[a(n,{href:"https://community.home-assistant.io/t/media-player-universal-source-in-overview/135331/3",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("如何为通用媒体播放器的信号源创建别名 - 媒体播放器信号源概述 - Home Assistant Community")]),_:1})]),Q,s("p",null,[a(n,{href:"https://jinja.palletsprojects.com/en/latest/templates/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Jinjia 模板文档 — Jinja Documentation (3.2.x)")]),_:1})]),s("p",null,[a(n,{href:"https://www.home-assistant.io/docs/configuration/templating/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("使用模版 - Home Assistant")]),_:1})]),s("p",null,[a(n,{href:"https://www.home-assistant.io/integrations/universal/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("通用媒体播放器 - Home Assistant")]),_:1})]),a(p),a(k),W,s("section",Z,[s("ol",ss,[s("li",is,[s("p",null,[i("Apple 开发者文档中提及了 Homekit 配件的两个关键类型，一个是 "),a(n,{href:"https://developer.apple.com/documentation/homekit/hmservice/accessory_service_types",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("配件服务类型（Accessory Service Types）")]),_:1}),i(" ，另一个是 "),a(n,{href:"https://developer.apple.com/documentation/homekit/hmcharacteristic/characteristic_types",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("配件特征 类型（Characteristic types）")]),_:1}),i(),as])]),s("li",ns,[s("p",null,[i("Apple 提供了 macOS 端的 HomeKit Accessory Simulator 应用程序来支持让开发者通过 macOS 模拟 Homekit 配件，教程："),a(n,{href:"https://developer.apple.com/documentation/homekit/testing_your_app_with_the_homekit_accessory_simulator",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Testing your app with the HomeKit Accessory Simulator")]),_:1}),i(),es])])])])])}const gs=d(m,[["render",ts]]);export{cs as __pageData,gs as default};
