import{_ as h,c as k,I as a,j as i,a as s,w as o,au as t,D as e,o as r}from"./chunks/framework.RMxno62p.js";const w=JSON.parse('{"title":"在 Visual Studio Code 中使用 go.work 时根目录的 go.mod 会提示 no go.mod file found in","description":"","frontmatter":{"tags":["软件/Visual-Studio-Code","软件/Visual-Studio-Code/vscode","开发/语言/Golang","命令行/go"]},"headers":[],"relativePath":"笔记/🛠️ 开发/語 编程语言/🐭 Golang/在 Visual Studio Code 中使用 go.work 时根目录的 go.mod 会提示 no go.mod file found in.md","filePath":"笔记/🛠️ 开发/語 编程语言/🐭 Golang/在 Visual Studio Code 中使用 go.work 时根目录的 go.mod 会提示 no go.mod file found in.md"}'),c={name:"笔记/🛠️ 开发/語 编程语言/🐭 Golang/在 Visual Studio Code 中使用 go.work 时根目录的 go.mod 会提示 no go.mod file found in.md"},g=i("h1",{id:"在-visual-studio-code-中使用-go-work-时根目录的-go-mod-会提示-no-go-mod-file-found-in",tabindex:"-1"},[s("在 Visual Studio Code 中使用 go.work 时根目录的 go.mod 会提示 no go.mod file found in "),i("a",{class:"header-anchor",href:"#在-visual-studio-code-中使用-go-work-时根目录的-go-mod-会提示-no-go-mod-file-found-in","aria-label":'Permalink to "在 Visual Studio Code 中使用 go.work 时根目录的 go.mod 会提示 no go.mod file found in"'},"​")],-1),u=t('<p>如果你在根目录配置了 <code>go.work</code> 作为 <code>monorepo</code> 的配置文件，然后通过</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mod</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">module</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 路</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>或者直接在 <code>go env GOPATH</code> 目录下通过</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mod</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> init</span></span></code></pre></div><p>创建 <code>go.mod</code> 之后，可能可以在最新版本的 Visual Studio Code 和最新版本的 Golang（我这里 <code>v1.21.3</code>）看到这样的错误：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>no go.mod file found in /Users/neko/Git/&lt;路径&gt;</span></span></code></pre></div>',6),C=i("code",null,"gopls",-1),_=i("code",null,"gopls",-1),B=i("code",null,"build.allowModfileModifications",-1),b=t(`<p>通过命令面板打开 Visual Studio Code 的配置：</p><ul><li>在 macOS 上按 <kbd data-macos-keyboard-key="command">command</kbd> + <kbd data-macos-keyboard-key="option">option</kbd> + <kbd>P</kbd> 可以激活命令面板</li><li>在 Windows 和 Linux 上按 <kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>P</kbd></li></ul><p>然后输入选择下面的内容来配置<strong>全局</strong> Visual Studio Code 配置：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>Open User Settings (JSON)</span></span></code></pre></div><p>当然如果你只有部分项目出错，也可以配置<strong>工作区</strong> Visual Studio Code 配置：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>Open Workspace Settings (JSON)</span></span></code></pre></div><p>然后查看配置：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light one-dark-pro has-focused-lines vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;gopls&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;build.allowImplicitNetworkAccess&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line has-focus"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;build.allowModfileModifications&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;build.buildFlags&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;ui.completion.usePlaceholders&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>或者直接搜索</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>allowModfileModifications</span></span></code></pre></div><p>然后将其配置为 <code>false</code> 或者注释掉来解决这个问题：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;gopls&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;build.allowImplicitNetworkAccess&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line diff remove"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;build.allowModfileModifications&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;build.allowModfileModifications&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;build.buildFlags&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;ui.completion.usePlaceholders&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div>`,12);function y(m,f,v,A,E,F){const l=e("NolebasePageProperties"),n=e("VPNolebaseInlineLinkPreview"),p=e("NolebaseGitContributors"),d=e("NolebaseGitChangelog");return r(),k("div",null,[g,a(l),u,i("p",null,[s("你很可能遇到了这个"),a(n,{href:"https://github.com/golang/go/issues/56570",target:"_blank",rel:"noreferrer"},{default:o(()=>[s("现在依然存在的 Visual Studio Code 的 Go 插件所引用的 "),C,s(" 库的 bug")]),_:1}),s("，你可以试图检查 Visual Studio Code 的 Go 插件所引用的 "),_,s(" 库在 Visual Studio Code 中对应的 "),a(n,{href:"https://github.com/golang/vscode-go/wiki/settings#buildallowmodfilemodifications",target:"_blank",rel:"noreferrer"},{default:o(()=>[B]),_:1}),s(" 配置选项是否开启，")]),b,a(p),a(d)])}const V=h(c,[["render",y]]);export{w as __pageData,V as default};
