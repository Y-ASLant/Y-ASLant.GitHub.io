import{_ as c,c as h,I as t,j as e,w as n,a,D as o,o as d}from"./chunks/framework.RMxno62p.js";const x=JSON.parse('{"title":"将 chatGPT 与文档结合","description":"","frontmatter":{"status":"尚未完成"},"headers":[],"relativePath":"笔记/🤖 AI 人工智能/将 chatGPT 与文档结合.md","filePath":"笔记/🤖 AI 人工智能/将 chatGPT 与文档结合.md"}'),p={name:"笔记/🤖 AI 人工智能/将 chatGPT 与文档结合.md"},u=e("h1",{id:"将-chatgpt-与文档结合",tabindex:"-1"},[a("将 chatGPT 与文档结合 "),e("a",{class:"header-anchor",href:"#将-chatgpt-与文档结合","aria-label":'Permalink to "将 chatGPT 与文档结合"'},"​")],-1),f=e("div",{class:"warning custom-block github-alert"},[e("p",{class:"custom-block-title"},"WARNING"),e("p",null,"⚠️ 该文档尚未完成，仍在编写中...")],-1),g=e("h2",{id:"参考资料",tabindex:"-1"},[a("参考资料 "),e("a",{class:"header-anchor",href:"#参考资料","aria-label":'Permalink to "参考资料"'},"​")],-1),b=e("h2",{id:"参考项目",tabindex:"-1"},[a("参考项目 "),e("a",{class:"header-anchor",href:"#参考项目","aria-label":'Permalink to "参考项目"'},"​")],-1);function _(m,P,v,G,k,w){const l=o("NolebasePageProperties"),r=o("VPNolebaseInlineLinkPreview"),i=o("NolebaseGitContributors"),s=o("NolebaseGitChangelog");return d(),h("div",null,[u,t(l),f,g,e("p",null,[t(r,{href:"https://blog.devgenius.io/chat-with-document-s-using-openai-chatgpt-api-and-text-embedding-6a0ce3dc8bc8",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("Chat with Document(s) using OpenAI ChatGPT API and Text Embedding | by Sung Kim | Mar, 2023 | Dev Genius")]),_:1})]),e("p",null,[t(r,{href:"https://supabase.com/blog/openai-embeddings-postgres-vector",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("Storing OpenAI embeddings in Postgres with pgvector")]),_:1})]),e("p",null,[t(r,{href:"https://langchain.readthedocs.io/en/latest/reference.html",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("🦜🔗 LangChain 0.0.120")]),_:1})]),e("p",null,[t(r,{href:"https://gpt-index.readthedocs.io/en/latest/index.html",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("LlamaIndex documentation")]),_:1})]),e("p",null,[t(r,{href:"https://mp.weixin.qq.com/s/3coFhAdzr40tozn8f9Dc-w",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("LangChain：Model as a Service粘合剂，被ChatGPT插件干掉了吗？")]),_:1})]),e("p",null,[t(r,{href:"https://orangeblog.notion.site/GPT-4-AGI-8fc50010291d47efb92cbbd668c8c893",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("GPT-4 ，人类迈向AGI的第一步（上半）")]),_:1})]),e("p",null,[t(r,{href:"https://yaofu.notion.site/GPT-3-5-360081d91ec245f29029d37b54573756#5a1bff82a11042a58871ed9dfa6e98c5",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("拆解追溯 GPT-3.5 各项能力的起源")]),_:1})]),b,e("p",null,[t(r,{href:"https://github.com/hwchase17/notion-qa",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("hwchase17/notion-qa")]),_:1})]),e("p",null,[t(r,{href:"https://github.com/JimmyLv/BibiGPT",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("JimmyLv/BibiGPT: BibiGPT 音视频内容一键总结")]),_:1})]),e("p",null,[t(r,{href:"https://github.com/milvus-io/milvus",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("milvus-io/milvus: A cloud-native vector database with high-performance and high scalability.")]),_:1})]),e("p",null,[t(r,{href:"https://github.com/pgvector/pgvector",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("pgvector/pgvector: Open-source vector similarity search for Postgres")]),_:1})]),e("p",null,[t(r,{href:"https://github.com/weaviate/weaviate",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("weaviate/weaviate: Weaviate is an open source vector search engine that stores both objects and vectors")]),_:1})]),e("p",null,[t(r,{href:"https://github.com/madawei2699/myGPTReader",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("madawei2699/myGPTReader: myGPTReader is a slack bot that can read any webpage, ebook or document and summarize it with chatGPT.")]),_:1})]),e("p",null,[t(r,{href:"https://github.com/hwchase17/langchain",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("hwchase17/langchain: ⚡ Building applications with LLMs through composability ⚡")]),_:1})]),e("p",null,[t(r,{href:"https://github.com/asg017/sqlite-vss",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("asg017/sqlite-vss: A SQLite extension for efficient vector search, based on Faiss!")]),_:1})]),t(i),t(s)])}const N=c(p,[["render",_]]);export{x as __pageData,N as default};
