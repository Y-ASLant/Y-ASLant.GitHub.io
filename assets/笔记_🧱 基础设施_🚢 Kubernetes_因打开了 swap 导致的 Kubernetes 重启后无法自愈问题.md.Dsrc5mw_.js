import{_ as d,c as o,I as i,j as s,w as n,a,au as l,D as t,o as r}from"./chunks/framework.RMxno62p.js";const x=JSON.parse('{"title":"因打开了 swap 导致的 Kubernetes 重启后无法自愈问题","description":"","frontmatter":{"tags":["开发/云原生/Kubernetes","命令行/kubectl","软件/云原生/kubelet","命令行/systemd","命令行/journalctl","计算机科学/内存/虚拟内存","计算机科学/内存/虚拟内存/swap","命令行/docker","开发/容器化/Docker","开发/云原生/Docker","软件/云原生/docker","计算机/操作系统/Linux","操作系统/Linux"]},"headers":[],"relativePath":"笔记/🧱 基础设施/🚢 Kubernetes/因打开了 swap 导致的 Kubernetes 重启后无法自愈问题.md","filePath":"笔记/🧱 基础设施/🚢 Kubernetes/因打开了 swap 导致的 Kubernetes 重启后无法自愈问题.md"}'),c={name:"笔记/🧱 基础设施/🚢 Kubernetes/因打开了 swap 导致的 Kubernetes 重启后无法自愈问题.md"},g=s("h1",{id:"因打开了-swap-导致的-kubernetes-重启后无法自愈问题",tabindex:"-1"},[a("因打开了 swap 导致的 Kubernetes 重启后无法自愈问题 "),s("a",{class:"header-anchor",href:"#因打开了-swap-导致的-kubernetes-重启后无法自愈问题","aria-label":'Permalink to "因打开了 swap 导致的 Kubernetes 重启后无法自愈问题"'},"​")],-1),u=s("h3",{id:"文档兼容性",tabindex:"-1"},[a("文档兼容性 "),s("a",{class:"header-anchor",href:"#文档兼容性","aria-label":'Permalink to "文档兼容性"'},"​")],-1),y={tabindex:"0"},C=s("thead",null,[s("tr",null,[s("th",null,"主体"),s("th",null,"版本号"),s("th",null,"文档地址（如果有）")])],-1),F=s("td",null,"Kubernetes",-1),b=s("td",null,"v1.22.1",-1),v=l(`<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>机器重启之后发现 docker 里面和 k8s 相关的容器都没有启动起来，等了好久也没有见有反应。</p><h2 id="排查" tabindex="-1">排查 <a class="header-anchor" href="#排查" aria-label="Permalink to &quot;排查&quot;">​</a></h2><p>通过 <code>systemctl status docker</code> 和 <code>journalctl -xef -u docker</code> 查看 docker 的状态和日志也没有发现问题。</p><p>使用 <code>kubectl get nodes</code> 时能看到节点的状态是 <code>NotReady</code>，如果使用 <code>kubectl describe node &lt;节点名称&gt;</code> 的话还能在 <code>MemoryPressure</code> 和其他状态栏中看到 <code>NodeStatusUnknown</code> 和 <code>kubelet stopped posting node status</code> 的报错。</p><p>查阅资料的时候发现有人推荐用 <code>journalctl</code> 看一下 <code>kubectl</code> 的日志和报错问题：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> journalctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> kubelet</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -f</span></span></code></pre></div><p>然后就发现了下面的日志：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>11月 26 16:37:46 node01 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE</span></span>
<span class="line"><span>11月 26 16:37:46 node01 systemd[1]: kubelet.service: Failed with result &#39;exit-code&#39;.</span></span>
<span class="line"><span>11月 26 16:37:56 node01 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 66.</span></span>
<span class="line"><span>11月 26 16:37:56 node01 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.</span></span>
<span class="line"><span>11月 26 16:37:56 node01 systemd[1]: Started kubelet: The Kubernetes Node Agent.</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: Flag --cgroup-driver has been deprecated, This parameter should be set via the config file specified by the Kubelet&#39;s --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: Flag --network-plugin has been deprecated, will be removed along with dockershim.</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: Flag --cgroup-driver has been deprecated, This parameter should be set via the config file specified by the Kubelet&#39;s --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: Flag --network-plugin has been deprecated, will be removed along with dockershim.</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: I1126 16:37:56.617346    5885 server.go:440] &quot;Kubelet version&quot; kubeletVersion=&quot;v1.22.12&quot;</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: I1126 16:37:56.617883    5885 server.go:868] &quot;Client rotation is on, will bootstrap in background&quot;</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: I1126 16:37:56.625503    5885 certificate_store.go:130] Loading cert/key pair from &quot;/var/lib/kubelet/pki/kubelet-client-current.pem&quot;.</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: I1126 16:37:56.627583    5885 dynamic_cafile_content.go:155] &quot;Starting controller&quot; name=&quot;client-ca-bundle::/etc/kubernetes/pki/ca.crt&quot;</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: W1126 16:37:56.627625    5885 manager.go:159] Cannot detect current cgroup on cgroup v2</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: I1126 16:37:56.750278    5885 server.go:687] &quot;--cgroups-per-qos enabled, but --cgroup-root was not specified.  defaulting to /&quot;</span></span>
<span class="line"><span>11月 26 16:37:56 node01 kubelet[5885]: E1126 16:37:56.750615    5885 server.go:294] &quot;Failed to run kubelet&quot; err=&quot;failed to run Kubelet: running with swap on is not supported, please disable swap! or set --fail-swap-on flag to false. /proc/swaps contained: [Filename\\t\\t\\t\\tType\\t\\tSize\\t\\tUsed\\t\\tPriority /dev/sda3                               partition\\t999420\\t\\t0\\t\\t-2]&quot;</span></span>
<span class="line"><span>11月 26 16:37:56 node01 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE</span></span>
<span class="line"><span>11月 26 16:37:56 node01 systemd[1]: kubelet.service: Failed with result &#39;exit-code&#39;.</span></span></code></pre></div><p>最关键的信息是这一条：</p><blockquote><p>Failed to run kubelet&quot; err=&quot;failed to run Kubelet: running with swap on is not supported, please disable swap! or set --fail-swap-on flag to false.</p></blockquote><p>该报错指明了 Kubernetes 无法在 swap 开启的时候运行 kubelet，我们要么关闭 swap，要么在 kubelet 相关的设置中配置其命令行参数 <code>--fail-swap-on</code>。 我们可以通过 <code>swapoff -a</code> 命令快速关闭 swap 来测试是否能恢复，如果可以，我们还能进一步配置其命令行参数 <code>--fail-swap-on</code> 来避免不正确的配置导致的 Kubernetes 自愈问题。</p><p>通过执行 <code>swapoff -a</code> 之后我们再次使用 <code>docker ps</code> 来检查容器运行状态就能发现已经有部分容器开始重启并恢复到 UP 状态了。</p><h2 id="解决" tabindex="-1">解决 <a class="header-anchor" href="#解决" aria-label="Permalink to &quot;解决&quot;">​</a></h2><h3 id="关闭-swap" tabindex="-1">关闭 swap <a class="header-anchor" href="#关闭-swap" aria-label="Permalink to &quot;关闭 swap&quot;">​</a></h3><p>在采用这样的方法解决问题的时候，我们得先知道什么是 swap 以及关掉之后的副作用以避免额外的问题导致悲剧的发生：</p><blockquote><p>swap 是磁盘上的一块区域，可以是一个分区，也可以是一个文件，或者是他们的组合。简单点说，当系统物理内存吃紧时，Linux会将内存中不常访问的数据保存到swap上，这样系统就有更多的物理内存为各个进程服务，而当系统需要访问swap上存储的内容时，再将swap上的数据加载到内存中。</p></blockquote><p>所以如果你在 <strong>内存不够用</strong>、<strong>内存勉强够用</strong> 的情况下，请勿关闭 swap，这可能导致出现 out of memory（内存耗尽）的错误从而导致更难从灾难中恢复服务甚至是恢复系统。反之，如果你在 <strong>内存充裕</strong> 的情况下，是可以考虑关闭 swap 的，但依然需要注意的是，如果内存用量吃紧而此时此刻又没有配置 swap 的话会发生什么呢？系统内核的 OOM Killer 会被触发，并将耗内存的进程优先终止掉，此时可能是终止的部分的容器内进程，也许会影响到服务的运作，如果还有部分的 k8s 或者是 systemd 守护进程存活，那可能其会再次将原先被杀掉的进程拉活，这个过程会有一个等待时间；如果配置了 swap，那内存压力会扩散到 swap 区域的压力上，并使服务器苟延残喘一会儿，通常会发生服务降级，这个时候也会需要运维人员尽快扩容并排查内存消耗的问题。</p><h4 id="如果没有-swap-分区" tabindex="-1">如果没有 swap 分区 <a class="header-anchor" href="#如果没有-swap-分区" aria-label="Permalink to &quot;如果没有 swap 分区&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">注意</p><p>下面步骤中使用的 <code>swapoff -a</code> 的命令并不是完全有效的，在系统中有配置 <code>systemd</code> ，且系统盘中有 swap 分区的情况下（通过执行 <code>sudo fdisk -l</code> 或者在 <code>/etc/fstab</code> 中可以查询），<code>systemd</code> 在启动后扫描到 swap 分区时就会自动挂载 swap 分区，并且将一个名为 <code>dev-&lt;dev 名称&gt;.swap</code> 的 <code>systemd</code> 单元加载并激活，这会导致 swap 重新被开启，这导致 <code>swapoff -a</code> 命令的结果只会在本次已经启动的系统中生效，这个时候如果需要永久性关闭 swap，我们需要执行额外的操作。</p></div><p>要了解当前的 swap 使用情况，我们可以：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> swapon</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -s</span></span></code></pre></div><p>在了解完上述情况之后如果仍需要临时关闭 swap，我们可以：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> swapoff</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -a</span></span></code></pre></div><p>如果需要撤销上一步操作，我们可以：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> swapon</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -a</span></span></code></pre></div><p>这个时候我们执行下面的命令重启 <code>kubelet</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> kubelet</span></span></code></pre></div><p>然后我们在集群内其他节点中可以执行下面的命令查看节点状态</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nodes</span></span></code></pre></div><p>这个时候就能看到目标节点的状态变更为 <code>Ready</code> 了。</p><h4 id="如果有-swap-分区" tabindex="-1">如果有 swap 分区 <a class="header-anchor" href="#如果有-swap-分区" aria-label="Permalink to &quot;如果有 swap 分区&quot;">​</a></h4><p>在现代的绝大多数 Linux 系统中，系统安装时的自动分区可能已经帮你分区好了 swap 分区，这个时候我们需要做一些额外的操作。</p><p>首先我们需要检查我们是否有 swap 分区和 swap 分区是否被 <code>systemd</code> 控制，可以通过执行以下命令了解到：</p><p>通过 <code>fdisk</code> 查询硬盘的分区：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> fdisk</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -l</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Disk</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /dev/sda:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> GiB,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 42949672960</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> bytes,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 83886080</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sectors</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Disk</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> model:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Virtual</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Disk</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Units:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sectors</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 512</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 512</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Sector</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (logical/physical): 512 bytes / 4096 bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">I/O</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (minimum/optimal): 4096 bytes / 4096 bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Disklabel</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> type:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> gpt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Disk</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> identifier:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 438E101B-2565-4003-948F-454B7A695D32</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Device</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        Start</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      End</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  Sectors</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  Size</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Type</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/dev/sda1</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">      2048</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  1050623</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  1048576</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  512M</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> EFI</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> System</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/dev/sda2</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">   1050624</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 81885183</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 80834560</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 38.5G</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> filesystem</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/dev/sda3</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  81885184</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 83884031</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  1998848</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  976M</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> swap</span></span></code></pre></div><p>可以看到 <code>/dev/sda3</code> 在设备上有一个 Linux swap 分区。</p><p>查看 <code>/etc/fstab</code>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>$ sudo cat /etc/fstab | grep swap</span></span>
<span class="line"><span># swap was on /dev/sda3 during installation</span></span>
<span class="line"><span>UUID=ec583562-8777-45cb-9512-e19b7ae96ee3 none            swap    sw              0       0</span></span></code></pre></div><p>为了方便了解 UUID 对应的设备是哪个，我们可以用 <code>ls -la</code> 命令查看 <code>/dev/disk/by-uuid</code> 目录下的映射，可以发现 <code>ec583562-8777-45cb-9512-e19b7ae96ee3</code> 是 <code>/dev/sda3</code> 的软链接，与 <code>fdisk -l</code> 获得的信息一致：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -la</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /dev/disk/by-uuid</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">总用量</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">drwxr-xr-x</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  3月</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  8</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 01:11</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">drwxr-xr-x</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 120</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  3月</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  8</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 01:11</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ..</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lrwxrwxrwx</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  10</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  3月</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  8</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 01:11</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 325D-4C1F</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ../../sda1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lrwxrwxrwx</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  10</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  3月</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  8</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 01:11</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> c10110c9-c86b-4020-ad6c-78e46ec3e642</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ../../sda2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lrwxrwxrwx</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  10</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  3月</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  8</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 01:11</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ec583562-8777-45cb-9512-e19b7ae96ee3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ../../sda3</span></span></code></pre></div><p>通过 <code>systemctl --all --type swap</code> 筛选出所有类型为 <code>swap</code> 的 <code>systemd</code> 单元：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --all</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --type</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> swap</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  UNIT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">          LOAD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   ACTIVE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   SUB</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  DESCRIPTION</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">●</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dev-sda3.swap</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> loaded</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> active</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mounted</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dev-sda3.swap</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">LOAD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Reflects</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> whether</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> unit</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> definition</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> was</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> properly</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> loaded.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ACTIVE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> The</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> high-level</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> unit</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> activation</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> state,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> i.e.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> generalization</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> SUB.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SUB</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> The</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> low-level</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> unit</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> activation</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> state,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> values</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> depend</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> unit</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> type.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> loaded</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> units</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> listed.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">To</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> all</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> installed</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> unit</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> files</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;systemctl list-unit-files&#39;.</span></span></code></pre></div><p>我们发现命令返回了一个名为 <code>dev-sda3.swap</code> 的 <code>systemd</code> 单元，名称与我们之前通过 <code>fdisk</code> 和查询 <code>/etc/fstab</code> 获得的一致。 接下来我们就需要一步一步操作，将 swap 完全禁用。</p><p>先执行一下 <code>swapoff -a</code> 使本次启动的系统停止 swap：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> swapoff</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -a</span></span></code></pre></div><p>接下来，需要编辑 <code>/etc/fstab</code> 将系统启动后自动挂载 swap 分区的指令注释起来或者整行删除掉，如果指令过多，你也可以在 <code>/etc/fstab</code> 查找 swap 相关的关键字并且把指令删除。 最终达到类似下面这样的结果：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span># swap was on /dev/sda3 during installation</span></span>
<span class="line"><span># UUID=ec583562-8777-45cb-9512-e19b7ae96ee3 none            swap    sw              0       0</span></span></code></pre></div><p>接下来，我们将上面通过 <code>systemctl --all --type swap</code> 获得的单元 mask 掉：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mask</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dev-sd3.swap</span></span></code></pre></div><p>最后我们执行下面的命令重启 <code>kubelet</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> kubelet</span></span></code></pre></div><p>然后我们在集群内其他节点中可以执行下面的命令查看节点状态</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nodes</span></span></code></pre></div><p>这个时候就能看到目标节点的状态变更为 <code>Ready</code> 了。</p><h3 id="配置-k8s-相关组件以支持不报错" tabindex="-1">配置 k8s 相关组件以支持不报错 <a class="header-anchor" href="#配置-k8s-相关组件以支持不报错" aria-label="Permalink to &quot;配置 k8s 相关组件以支持不报错&quot;">​</a></h3><p>在采用这样的方案之前我建议对相关的文档进行阅读以了解 kubernetes 为何不支持在 swap 开启的时候运行：</p>`,57),A=l(`<p>使用下列命令来查看 kubelet 的 systemd 配置：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> kubelet</span></span></code></pre></div><p>我们可以在打印出来的行中找到这样一条：</p><blockquote><p><code># /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</code></p></blockquote><p>这代表 kubelet systemd 是多文件组成的，我们需要直接编辑 <code>/etc/systemd/system/kubelet.service.d</code> 并添加额外参数才能解决问题：</p><p>源文件：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Note: This dropin only works with kubeadm and kubelet v1.11+</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># This is a file that &quot;kubeadm init&quot; and &quot;kubeadm join&quot; generate at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">EnvironmentFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">-/var/lib/kubelet/kubeadm-flags.env</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">EnvironmentFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">-/etc/default/kubelet</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;KUBELET_EXTRA_ARGS=--node-ip=10.24.0.2 --hostname-override=node01 &quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">/usr/local/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS</span></span></code></pre></div><p>我们在行</p><blockquote><p>Environment=&quot;KUBELET_EXTRA_ARGS=--node-ip=10.24.0.2 --hostname-override=node01 &quot;</p></blockquote><p>尾部添加 <code>--fail-swap-on=false</code> 来进行配置</p><p>变更后的文件：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Note: This dropin only works with kubeadm and kubelet v1.11+</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># This is a file that &quot;kubeadm init&quot; and &quot;kubeadm join&quot; generate at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">EnvironmentFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">-/var/lib/kubelet/kubeadm-flags.env</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">EnvironmentFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">-/etc/default/kubelet</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;KUBELET_EXTRA_ARGS=--node-ip=10.24.0.2 --hostname-override=node01 --fail-swap-on=false&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">/usr/local/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS</span></span></code></pre></div><h4 id="额外说明" tabindex="-1">额外说明 <a class="header-anchor" href="#额外说明" aria-label="Permalink to &quot;额外说明&quot;">​</a></h4><p>我们也可以在创建 k8s 控制平面的时候所执行的 <code>kubeadm init</code> 命令后添加 <code>--ignore-preflight-errors=Swap</code> 参数来为集群中每一个 kubelet 进行配置。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2>`,15);function m(f,E,w,_,D,B){const p=t("NolebasePageProperties"),e=t("VPNolebaseInlineLinkPreview"),h=t("NolebaseGitContributors"),k=t("NolebaseGitChangelog");return r(),o("div",null,[g,i(p),u,s("table",y,[C,s("tbody",null,[s("tr",null,[F,b,s("td",null,[i(e,{href:"https://v1-22.docs.kubernetes.io/",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("https://v1-22.docs.kubernetes.io/")]),_:1})])])])]),v,s("p",null,[i(e,{href:"https://github.com/kubernetes/kubeadm/issues/610",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("ERROR Swap: running with swap on is not supported. Please disable swap · Issue #610 · kubernetes/kubeadm")]),_:1}),i(e,{href:"https://kubernetes.io/blog/2021/08/04/kubernetes-1-22-release-announcement/#node-system-swap-support",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("Kubernetes 1.22: Reaching New Peaks | Kubernetes")]),_:1})]),A,s("p",null,[i(e,{href:"https://askubuntu.com/questions/440326/how-can-i-turn-off-swap-permanently/1292453#1292453",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("How can I turn off swap permanently? - Ask Ubuntu")]),_:1})]),s("p",null,[i(e,{href:"https://askubuntu.com/questions/440326/how-can-i-turn-off-swap-permanently/984777#984777",target:"_blank",rel:"noreferrer"},{default:n(()=>[a("How can I turn off swap permanently? - Ask Ubuntu")]),_:1})]),i(h),i(k)])}const T=d(c,[["render",m]]);export{x as __pageData,T as default};
