import{_ as r,c as o,I as a,j as i,w as e,a as s,au as l,D as t,o as d}from"./chunks/framework.RMxno62p.js";const $=JSON.parse('{"title":"基础类型","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/🛠️ 开发/語 编程语言/🐘 PHP/基础类型.md","filePath":"笔记/🛠️ 开发/語 编程语言/🐘 PHP/基础类型.md"}'),g={name:"笔记/🛠️ 开发/語 编程语言/🐘 PHP/基础类型.md"},c=i("h1",{id:"基础类型",tabindex:"-1"},[s("基础类型 "),i("a",{class:"header-anchor",href:"#基础类型","aria-label":'Permalink to "基础类型"'},"​")],-1),y=l('<h3 id="目錄" tabindex="-1">目錄 <a class="header-anchor" href="#目錄" aria-label="Permalink to &quot;目錄&quot;">​</a></h3><p>[toc]</p><h2 id="boolean-布尔类型" tabindex="-1">Boolean 布尔类型 <a class="header-anchor" href="#boolean-布尔类型" aria-label="Permalink to &quot;Boolean 布尔类型&quot;">​</a></h2><p>要指定一个布尔值，使用常量 <strong><code>true</code></strong> 或 <strong><code>false</code></strong>。两个都不区分大小写。</p><div class="language-PHP vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">PHP</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 设置 $foo 为 TRUE</span></span></code></pre></div><p>当转换为 boolean 时，以下值被认为是 <strong><code>false</code></strong>：</p>',6),_=i("strong",null,[i("code",null,"false")],-1),u=i("strong",null,[i("code",null,"true")],-1),C=i("strong",null,[i("code",null,"NAN")],-1),B=l(`<h2 id="integer-整型" tabindex="-1">Integer 整型 <a class="header-anchor" href="#integer-整型" aria-label="Permalink to &quot;Integer 整型&quot;">​</a></h2><p>整型值 int 可以使用十进制，十六进制，八进制或二进制表示</p><blockquote><p>从 PHP 7.4.0 开始，整型数值可能会包含下划线 (<code>_</code>)，为了更好的阅读体验，这些下划线在展示的时候，会被 PHP 过滤掉。</p></blockquote><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">php</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1234</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 十进制数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0123</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 八进制数，前缀 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0x1A</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 十六进制数，前缀 0x</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0b11111111</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 二进制数,前缀 0b</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1_234_567</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 整型数值 (PHP 7.4.0 以后)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre></div><p>整型数 int 的字长和平台有关，尽管通常最大值是大约二十亿（32 位有符号）。64 位平台下的最大值通常是大约 9E18。 PHP 不支持无符号的 int。int 值的字长可以用常量 **<code>PHP_INT_SIZE</code>**来表示， 最大值可以用常量 <strong><code>PHP_INT_MAX</code></strong> 来表示， 最小值可以用常量 <strong><code>PHP_INT_MIN</code></strong> 表示。</p><h4 id="整型溢出" tabindex="-1">整型溢出 <a class="header-anchor" href="#整型溢出" aria-label="Permalink to &quot;整型溢出&quot;">​</a></h4><p>如果给定的一个数超出了 int 的范围，将会被解释为 float。同样如果执行的运算结果超出了 int 范围，也会返回 float。</p><h2 id="float-浮点数" tabindex="-1">Float 浮点数 <a class="header-anchor" href="#float-浮点数" aria-label="Permalink to &quot;Float 浮点数&quot;">​</a></h2><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">php</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1.234</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$b</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1.2e3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$c</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 7E-10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$d</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1_234.567</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 从 PHP 7.4.0 开始支持</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre></div><h3 id="浮点数的精度" tabindex="-1">浮点数的精度 <a class="header-anchor" href="#浮点数的精度" aria-label="Permalink to &quot;浮点数的精度&quot;">​</a></h3><p>浮点数的精度有限。PHP 通常使用 IEEE 754 双精度格式，则由于取整而导致的最大相对误差为 1.11e-16。</p><p>例如，<code>floor((0.1+0.7)*10)</code> 通常会返回 <code>7</code> 而不是预期中的 <code>8</code>，因为该结果内部的表示其实是类似 <code>7.9999999999999991118...</code>。</p>`,12),A=l(`<h3 id="比较浮点数" tabindex="-1">比较浮点数 <a class="header-anchor" href="#比较浮点数" aria-label="Permalink to &quot;比较浮点数&quot;">​</a></h3><p>如上述警告信息所言，由于内部表达方式的原因，比较两个浮点数是否相等是有问题的。不过还是有迂回的方法来比较浮点数值的。</p><p>要测试浮点数是否相等，要使用一个仅比该数值大一丁点的最小误差值。该值也被称为机器极小值（epsilon）或最小单元取整数，是计算中所能接受的最小的差别值。</p><p><code>$a</code> 和 <code>$b</code> 在小数点后五位精度内都是相等的。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF;">php</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1.23456789</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$b</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1.23456780</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$epsilon</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0.00001</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$a</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$b</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $epsilon</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;true&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre></div><h3 id="nan" tabindex="-1">NaN <a class="header-anchor" href="#nan" aria-label="Permalink to &quot;NaN&quot;">​</a></h3>`,6),f=i("strong",null,[i("code",null,"NAN")],-1),b=i("strong",null,[i("code",null,"NAN")],-1),E=i("strong",null,[i("code",null,"NAN")],-1);function D(P,m,w,N,F,v){const h=t("NolebasePageProperties"),n=t("VPNolebaseInlineLinkPreview"),p=t("NolebaseGitContributors"),k=t("NolebaseGitChangelog");return d(),o("div",null,[c,a(h),y,i("ul",null,[i("li",null,[a(n,{href:"https://www.php.net/manual/zh/language.types.boolean.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("布尔")]),_:1}),s("值 "),_,s(" 本身")]),i("li",null,[a(n,{href:"https://www.php.net/manual/zh/language.types.integer.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("整型")]),_:1}),s("值 0（零）及 -0 (零)")]),i("li",null,[a(n,{href:"https://www.php.net/manual/zh/language.types.float.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("浮点型")]),_:1}),s("值 0.0（零）-0.0(零)")]),i("li",null,[s("空"),a(n,{href:"https://www.php.net/manual/zh/language.types.string.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("字符串")]),_:1}),s("，以及"),a(n,{href:"https://www.php.net/manual/zh/language.types.string.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("字符串")]),_:1}),s(' "0"')]),i("li",null,[s("不包括任何元素的"),a(n,{href:"https://www.php.net/manual/zh/language.types.array.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("数组")]),_:1})]),i("li",null,[s("特殊类型 "),a(n,{href:"https://www.php.net/manual/zh/language.types.null.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("NULL")]),_:1}),s("（包括尚未赋值的变量）")]),i("li",null,[s("从空标记生成的 "),a(n,{href:"https://www.php.net/manual/zh/ref.simplexml.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("SimpleXML")]),_:1}),s(" 对象")])]),i("p",null,[s("所有其它值都被认为是 "),u,s("（包括任何"),a(n,{href:"https://www.php.net/manual/zh/language.types.resource.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("资源")]),_:1}),s(" 和 "),C,s("）。")]),B,i("p",null,[s("所以永远不要相信浮点数结果精确到了最后一位，也永远不要比较两个浮点数是否相等。如果确实需要更高的精度，应该使用"),a(n,{href:"https://www.php.net/manual/zh/ref.bc.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("任意精度数学函数")]),_:1}),s("或者 "),a(n,{href:"https://www.php.net/manual/zh/ref.gmp.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("gmp 函数")]),_:1}),s("。")]),A,i("p",null,[s("某些数学运算会产生一个由常量 "),f,s(" 所代表的结果。由于 "),b,s(" 代表着任何不同值，不应拿 "),E,s(" 去和其它值进行比较，包括其自身，应该用 "),a(n,{href:"https://www.php.net/manual/zh/function.is-nan.php",target:"_blank",rel:"noreferrer"},{default:e(()=>[s("is_nan()")]),_:1}),s(" 来检查。")]),a(p),a(k)])}const x=r(g,[["render",D]]);export{$ as __pageData,x as default};
