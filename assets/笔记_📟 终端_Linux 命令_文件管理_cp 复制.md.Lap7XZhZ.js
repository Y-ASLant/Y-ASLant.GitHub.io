import{_ as l,c as o,I as s,j as t,a as r,au as h,D as a,o as d}from"./chunks/framework.RMxno62p.js";const F=JSON.parse('{"title":"cp 复制","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/📟 终端/Linux 命令/文件管理/cp 复制.md","filePath":"笔记/📟 终端/Linux 命令/文件管理/cp 复制.md"}'),p={name:"笔记/📟 终端/Linux 命令/文件管理/cp 复制.md"},c=t("h1",{id:"cp-复制",tabindex:"-1"},[t("code",null,"cp"),r(" 复制 "),t("a",{class:"header-anchor",href:"#cp-复制","aria-label":'Permalink to "`cp` 复制"'},"​")],-1),k=h('<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p><strong>c</strong>o<strong>p</strong>y，复制的含义。使用这个命令可以把文件复制到别的地方，这个操作可能会很慢，因为需要把数据和路径一起变更，相比剪贴命令而言可能会慢很多，但是在同一个分区、硬盘内操作的话，依然是十分迅速的。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [参数] </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">源路径</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">目标路径</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><ol><li>复制单个文件</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> meow</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> meow2</span></span></code></pre></div><ol start="2"><li>移动文件夹内文件到另一个文件夹</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> test1/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> test2/</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><h3 id="复制时包含子文件夹中的文件-参数-r" tabindex="-1">复制时包含子文件夹中的文件 - 参数 r <a class="header-anchor" href="#复制时包含子文件夹中的文件-参数-r" aria-label="Permalink to &quot;复制时包含子文件夹中的文件 - 参数 r&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> test1/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> test2/</span></span></code></pre></div><h3 id="其他参数" tabindex="-1">其他参数 <a class="header-anchor" href="#其他参数" aria-label="Permalink to &quot;其他参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><strong>-a</strong></td><td>此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合</td></tr><tr><td><strong>-d</strong></td><td>复制时保留链接。这里所说的链接相当于 Windows 系统中的快捷方式</td></tr><tr><td><strong>-f</strong></td><td>覆盖已经存在的目标文件而不给出提示</td></tr><tr><td><strong>-i</strong></td><td>与 <strong>-f</strong> 选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答 y 时目标文件将被覆盖</td></tr><tr><td><strong>-p</strong></td><td>除复制文件的内容外，还把修改时间和访问权限也复制到新文件中</td></tr><tr><td><strong>-r</strong></td><td>若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件</td></tr><tr><td><strong>-l</strong></td><td>不复制文件，只是生成链接文件</td></tr></tbody></table>',14);function g(b,u,_,C,y,m){const e=a("NolebasePageProperties"),i=a("NolebaseGitContributors"),n=a("NolebaseGitChangelog");return d(),o("div",null,[c,s(e),k,s(i),s(n)])}const v=l(p,[["render",g]]);export{F as __pageData,v as default};
